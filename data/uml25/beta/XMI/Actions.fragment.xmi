<?xml version="1.0" encoding="UTF-8"?>
<uml:Package xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:uml="http://schema.omg.org/spec/UML/2.2" xsi:schemaLocation="http://schema.omg.org/spec/UML/2.2 http://www.eclipse.org/uml2/3.0.0/UML" xmi:id="_Aja80DoZEeCmpu-HRutBsg" name="Actions">
  <packageImport xmi:type="uml:PackageImport" xmi:id="_oOo08CeGEeGIO7n8RMES3Q">
    <importedPackage xmi:type="uml:Package" href="Classification.fragment.xmi#_CHPgADoZEeCmpu-HRutBsg"/>
  </packageImport>
  <packageImport xmi:type="uml:PackageImport" xmi:id="_rpfLMCeGEeGIO7n8RMES3Q">
    <importedPackage xmi:type="uml:Package" href="StructuredClassifiers.fragment.xmi#_LPJfsDoZEeCmpu-HRutBsg"/>
  </packageImport>
  <packageImport xmi:type="uml:PackageImport" xmi:id="_vBheACeGEeGIO7n8RMES3Q">
    <importedPackage xmi:type="uml:Package" href="CommonStructure.fragment.xmi#_D211YDoZEeCmpu-HRutBsg"/>
  </packageImport>
  <packageImport xmi:type="uml:PackageImport" xmi:id="_y76P8CeGEeGIO7n8RMES3Q">
    <importedPackage xmi:type="uml:Package" href="Activities.fragment.xmi#_BHLKIDoZEeCmpu-HRutBsg"/>
  </packageImport>
  <packageImport xmi:type="uml:PackageImport" xmi:id="_12PcQDXuEeG8q77ujcumXA">
    <importedPackage xmi:type="uml:Package" href="CommonBehavior.fragment.xmi#_DF0oIDoZEeCmpu-HRutBsg"/>
  </packageImport>
  <packagedElement xmi:type="uml:Class" xmi:id="_Akde_ToZEeCmpu-HRutBsg" name="ValueSpecificationAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_Akde_joZEeCmpu-HRutBsg" annotatedElement="_Akde_ToZEeCmpu-HRutBsg">
      <body>A value specification action is an action that evaluates a value specification.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_Akde_zoZEeCmpu-HRutBsg" name="multiplicity" constrainedElement="_Akde_ToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfADoZEeCmpu-HRutBsg" annotatedElement="_Akde_zoZEeCmpu-HRutBsg">
        <body>The multiplicity of the result pin is 1..1</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfAToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkdfAjoZEeCmpu-HRutBsg" name="compatible_type" constrainedElement="_Akde_ToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfAzoZEeCmpu-HRutBsg" annotatedElement="_AkdfAjoZEeCmpu-HRutBsg">
        <body>The type of value specification must be compatible with the type of the result pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfBDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AkdfBToZEeCmpu-HRutBsg" general="_AkdfaDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkdfBjoZEeCmpu-HRutBsg" name="result" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdffzoZEeCmpu-HRutBsg" association="_AkwbbToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfBzoZEeCmpu-HRutBsg" annotatedElement="_AkdfBjoZEeCmpu-HRutBsg">
        <body>Gives the output pin on which the result is put.</body>
      </ownedComment>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkdfCDoZEeCmpu-HRutBsg" name="value" visibility="public" aggregation="composite" association="_AkwbcDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfCToZEeCmpu-HRutBsg" annotatedElement="_AkdfCDoZEeCmpu-HRutBsg">
        <body>Value specification to be evaluated.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Values.fragment.xmi#_MYTjCToZEeCmpu-HRutBsg"/>
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3IzOjoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AkdfCjoZEeCmpu-HRutBsg" name="VariableAction" isAbstract="true">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfCzoZEeCmpu-HRutBsg" annotatedElement="_AkdfCjoZEeCmpu-HRutBsg">
      <body>VariableAction is an abstract class for actions that operate on a statically specified variable.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkdfDDoZEeCmpu-HRutBsg" name="scope_of_variable" constrainedElement="_AkdfCjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfDToZEeCmpu-HRutBsg" annotatedElement="_AkdfDDoZEeCmpu-HRutBsg">
        <body>The action must be in the scope of the variable.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfDjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>variable.isAccessibleBy(self)</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AkdfDzoZEeCmpu-HRutBsg" general="_AkdfaDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkdfEDoZEeCmpu-HRutBsg" name="variable" visibility="public" association="_AkwbaToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfEToZEeCmpu-HRutBsg" annotatedElement="_AkdfEDoZEeCmpu-HRutBsg">
        <body>Variable to be read.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Activities.fragment.xmi#_BHevfzoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AkdfEjoZEeCmpu-HRutBsg" name="WriteLinkAction" isAbstract="true">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfEzoZEeCmpu-HRutBsg" annotatedElement="_AkdfEjoZEeCmpu-HRutBsg">
      <body>WriteLinkAction is an abstract class for link actions that create and destroy links.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkdfFDoZEeCmpu-HRutBsg" name="allow_access" constrainedElement="_AkdfEjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfFToZEeCmpu-HRutBsg" annotatedElement="_AkdfFDoZEeCmpu-HRutBsg">
        <body>The visibility of at least one end must allow access to the class using the action.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfFjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AkdfFzoZEeCmpu-HRutBsg" general="_AknQszoZEeCmpu-HRutBsg"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AkdfGDoZEeCmpu-HRutBsg" name="WriteStructuralFeatureAction" isAbstract="true">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfGToZEeCmpu-HRutBsg" annotatedElement="_AkdfGDoZEeCmpu-HRutBsg">
      <body>WriteStructuralFeatureAction is an abstract class for structural feature actions that change structural feature values.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkdfGjoZEeCmpu-HRutBsg" name="multiplicity_of_result" constrainedElement="_AkdfGDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfGzoZEeCmpu-HRutBsg" annotatedElement="_AkdfGjoZEeCmpu-HRutBsg">
        <body>The multiplicity of the result output pin must be 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfHDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>result &lt;> null implies result.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkdfHToZEeCmpu-HRutBsg" name="input_pin" constrainedElement="_AkdfGDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfHjoZEeCmpu-HRutBsg" annotatedElement="_AkdfHToZEeCmpu-HRutBsg">
        <body>The type of the value input pin is the same as the type of the structural feature.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfHzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>value &lt;> null implies value.type = structuralFeature.type</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkdfIDoZEeCmpu-HRutBsg" name="multiplicity" constrainedElement="_AkdfGDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfIToZEeCmpu-HRutBsg" annotatedElement="_AkdfIDoZEeCmpu-HRutBsg">
        <body>The multiplicity of the input pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfIjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>value.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkdfIzoZEeCmpu-HRutBsg" name="type_of_result" constrainedElement="_AkdfGDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfJDoZEeCmpu-HRutBsg" annotatedElement="_AkdfIzoZEeCmpu-HRutBsg">
        <body>The type of the result output pin is the same as the type of the inherited object input pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfJToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>result &lt;> null implies result.type = object.type</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AkdfJjoZEeCmpu-HRutBsg" general="_AkwZrzoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkdfJzoZEeCmpu-HRutBsg" name="result" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdffzoZEeCmpu-HRutBsg" association="_AkwbYzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfKDoZEeCmpu-HRutBsg" annotatedElement="_AkdfJzoZEeCmpu-HRutBsg">
        <body>Gives the output pin on which the result is put.</body>
      </ownedComment>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkdfKToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkdfKjoZEeCmpu-HRutBsg" name="value" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwbZjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfKzoZEeCmpu-HRutBsg" annotatedElement="_AkdfKjoZEeCmpu-HRutBsg">
        <body>Value to be added or removed from the structural feature.</body>
      </ownedComment>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkdfLDoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AkdfLToZEeCmpu-HRutBsg" name="WriteVariableAction" isAbstract="true">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfLjoZEeCmpu-HRutBsg" annotatedElement="_AkdfLToZEeCmpu-HRutBsg">
      <body>WriteVariableAction is an abstract class for variable actions that change variable values.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkdfLzoZEeCmpu-HRutBsg" name="same_type" constrainedElement="_AkdfLToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfMDoZEeCmpu-HRutBsg" annotatedElement="_AkdfLzoZEeCmpu-HRutBsg">
        <body>The type input pin is the same as the type of the variable.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfMToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>value &lt;> null implies value.type = variable.type</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkdfMjoZEeCmpu-HRutBsg" name="multiplicity" constrainedElement="_AkdfLToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfMzoZEeCmpu-HRutBsg" annotatedElement="_AkdfMjoZEeCmpu-HRutBsg">
        <body>The multiplicity of the input pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfNDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>value.is(1,1)</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AkdfNToZEeCmpu-HRutBsg" general="_AkdfCjoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkdfNjoZEeCmpu-HRutBsg" name="value" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwbYDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfNzoZEeCmpu-HRutBsg" annotatedElement="_AkdfNjoZEeCmpu-HRutBsg">
        <body>Value to be added or removed from the variable.</body>
      </ownedComment>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkdfODoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Enumeration" xmi:id="_AkdfOToZEeCmpu-HRutBsg" name="ExpansionKind">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfOjoZEeCmpu-HRutBsg" annotatedElement="_AkdfOToZEeCmpu-HRutBsg">
      <body>ExpansionKind is an enumeration type used to specify how multiple executions of an expansion region interact.</body>
    </ownedComment>
    <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_AkdfOzoZEeCmpu-HRutBsg" name="parallel" classifier="_AkdfOToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfPDoZEeCmpu-HRutBsg" annotatedElement="_AkdfOzoZEeCmpu-HRutBsg">
        <body>The executions are independent. They may be executed concurrently.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_AkdfPToZEeCmpu-HRutBsg" name="iterative" classifier="_AkdfOToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfPjoZEeCmpu-HRutBsg" annotatedElement="_AkdfPToZEeCmpu-HRutBsg">
        <body>The executions are dependent and must be executed one at a time, in order of the collection elements.</body>
      </ownedComment>
    </ownedLiteral>
    <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_AkdfPzoZEeCmpu-HRutBsg" name="stream" classifier="_AkdfOToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfQDoZEeCmpu-HRutBsg" annotatedElement="_AkdfPzoZEeCmpu-HRutBsg">
        <body>A stream of collection elements flows into a single execution, in order of the collection elements.</body>
      </ownedComment>
    </ownedLiteral>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AkdfQToZEeCmpu-HRutBsg" name="AcceptCallAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfQjoZEeCmpu-HRutBsg" annotatedElement="_AkdfQToZEeCmpu-HRutBsg">
      <body>An accept call action is an accept event action representing the receipt of a synchronous call request. In addition to the normal operation parameters, the action produces an output that is needed later to supply the information to the reply action necessary to return control to the caller. This action is for synchronous calls. If it is used to handle an asynchronous call, execution of the subsequent reply action will complete immediately with no effects.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkdfQzoZEeCmpu-HRutBsg" name="result_pins" constrainedElement="_AkdfQToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfRDoZEeCmpu-HRutBsg" annotatedElement="_AkdfQzoZEeCmpu-HRutBsg">
        <body>The result pins must match the in and inout parameters of the operation specified by the trigger event in number, type, and order.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfRToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkdfRjoZEeCmpu-HRutBsg" name="trigger_call_event" constrainedElement="_AkdfQToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfRzoZEeCmpu-HRutBsg" annotatedElement="_AkdfRjoZEeCmpu-HRutBsg">
        <body>The trigger event must be a CallEvent.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfSDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>trigger.event->forAll(e | e.oclIsKindOf(CallEvent))</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkdfSToZEeCmpu-HRutBsg" name="unmarshall" constrainedElement="_AkdfQToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfSjoZEeCmpu-HRutBsg" annotatedElement="_AkdfSToZEeCmpu-HRutBsg">
        <body>isUnmrashall must be true for an AcceptCallAction.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfSzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>isUnmarshall = true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AkdfTDoZEeCmpu-HRutBsg" general="_AkdfTzoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkdfTToZEeCmpu-HRutBsg" name="returnInformation" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdffzoZEeCmpu-HRutBsg" association="_AkwbXToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfTjoZEeCmpu-HRutBsg" annotatedElement="_AkdfTToZEeCmpu-HRutBsg">
        <body>Pin where a value is placed containing sufficient information to perform a subsequent reply and return control to the caller. The contents of this value are opaque. It can be passed and copied but it cannot be manipulated by the model.</body>
      </ownedComment>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AkdfTzoZEeCmpu-HRutBsg" name="AcceptEventAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfUDoZEeCmpu-HRutBsg" annotatedElement="_AkdfTzoZEeCmpu-HRutBsg">
      <body>A accept event action is an action that waits for the occurrence of an event meeting specified conditions.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkdfUToZEeCmpu-HRutBsg" name="trigger_events" constrainedElement="_AkdfTzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfUjoZEeCmpu-HRutBsg" annotatedElement="_AkdfUToZEeCmpu-HRutBsg">
        <body>If the trigger events are all TimeEvents, there is exactly one output pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfUzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkdfVDoZEeCmpu-HRutBsg" name="no_input_pins" constrainedElement="_AkdfTzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfVToZEeCmpu-HRutBsg" annotatedElement="_AkdfVDoZEeCmpu-HRutBsg">
        <body>AcceptEventActions may have no input pins.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfVjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkdfVzoZEeCmpu-HRutBsg" name="no_output_pins" constrainedElement="_AkdfTzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfWDoZEeCmpu-HRutBsg" annotatedElement="_AkdfVzoZEeCmpu-HRutBsg">
        <body>There are no output pins if the trigger events are only ChangeEvents, or if they are only CallEvents when this action is an instance of AcceptEventAction and not an instance of a descendant of AcceptEventAction (such as AcceptCallAction).</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfWToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkdfWjoZEeCmpu-HRutBsg" name="unmarshall_signal_events" constrainedElement="_AkdfTzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfWzoZEeCmpu-HRutBsg" annotatedElement="_AkdfWjoZEeCmpu-HRutBsg">
        <body>If isUnmarshall is true, there must be exactly one trigger for events of type SignalEvent. The number of result output pins must be the same as the number of attributes of the signal. The type and ordering of each result output pin must be the same as the corresponding attribute of the signal. The multiplicity of each result output pin must be compatible with the multiplicity of the corresponding attribute.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfXDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AkdfXToZEeCmpu-HRutBsg" general="_AkdfaDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkdfXjoZEeCmpu-HRutBsg" name="isUnmarshall" visibility="public">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfXzoZEeCmpu-HRutBsg" annotatedElement="_AkdfXjoZEeCmpu-HRutBsg">
        <body>Indicates whether there is a single output pin for the event, or multiple output pins for attributes of the event.</body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="PrimitiveTypes.xmi#_PSic1ToZEeCmpu-HRutBsg"/>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_AkdfYDoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkdfYToZEeCmpu-HRutBsg" name="result" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdffzoZEeCmpu-HRutBsg" association="_AkwbWjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfYjoZEeCmpu-HRutBsg" annotatedElement="_AkdfYToZEeCmpu-HRutBsg">
        <body>Pins holding the received event objects or their attributes. Event objects may be copied in transmission, so identity might not be preserved.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkdfYzoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkdfZDoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkdfZToZEeCmpu-HRutBsg" name="trigger" visibility="public" aggregation="composite" association="_AkwbVzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfZjoZEeCmpu-HRutBsg" annotatedElement="_AkdfZToZEeCmpu-HRutBsg">
        <body>The type of events accepted by the action, as specified by triggers. For triggers with signal events, a signal of the specified type or any subtype of the specified signal type is accepted.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="CommonBehavior.fragment.xmi#_DF-ZgToZEeCmpu-HRutBsg"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkdfZzoZEeCmpu-HRutBsg" value="*"/>
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3IzOjoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AkdfaDoZEeCmpu-HRutBsg" name="Action" isAbstract="true">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfaToZEeCmpu-HRutBsg" annotatedElement="_AkdfaDoZEeCmpu-HRutBsg">
      <body>An action has pre- and post-conditions.
An action is a named element that is the fundamental unit of executable functionality. The execution of an action represents some transformation or processing in the modeled system, be it a computer system or otherwise.
An action represents a single step within an activity, that is, one that is not further decomposed within the activity.</body>
    </ownedComment>
    <generalization xmi:type="uml:Generalization" xmi:id="_AkdfbDoZEeCmpu-HRutBsg">
      <general xmi:type="uml:Class" href="Activities.fragment.xmi#_BHeu8ToZEeCmpu-HRutBsg"/>
    </generalization>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkdfbToZEeCmpu-HRutBsg" name="context" visibility="public" isReadOnly="true" isDerived="true" association="_AkwbSjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfbjoZEeCmpu-HRutBsg" annotatedElement="_AkdfbToZEeCmpu-HRutBsg">
        <body>The classifier that owns the behavior of which this action is a part.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Classification.fragment.xmi#_CHsOcDoZEeCmpu-HRutBsg"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkdfbzoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkdfcDoZEeCmpu-HRutBsg" name="input" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" isOrdered="true" isReadOnly="true" isDerived="true" isDerivedUnion="true" aggregation="composite" association="_AkwbTjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfcToZEeCmpu-HRutBsg" annotatedElement="_AkdfcDoZEeCmpu-HRutBsg">
        <body>The ordered set of input pins connected to the Action. These are among the total set of inputs.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkdfcjoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkdfczoZEeCmpu-HRutBsg"/>
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3IzOjoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkdfdDoZEeCmpu-HRutBsg" name="isLocallyReentrant" visibility="public">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfdToZEeCmpu-HRutBsg" annotatedElement="_AkdfdDoZEeCmpu-HRutBsg">
        <body>If true, the action can begin a new, concurrent execution, even if there is already another execution of the action ongoing. If false, the action cannot begin a new execution until any previous execution has completed.</body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="PrimitiveTypes.xmi#_PSic1ToZEeCmpu-HRutBsg"/>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_AkdfdjoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkdfdzoZEeCmpu-HRutBsg" name="localPostcondition" visibility="public" aggregation="composite" association="_AkwbVDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfeDoZEeCmpu-HRutBsg" annotatedElement="_AkdfdzoZEeCmpu-HRutBsg">
        <body>Constraint that must be satisfied when executed is completed.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="CommonStructure.fragment.xmi#_D3IzAzoZEeCmpu-HRutBsg"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkdfeToZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkdfejoZEeCmpu-HRutBsg"/>
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3IzOjoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkdfezoZEeCmpu-HRutBsg" name="localPrecondition" visibility="public" aggregation="composite" association="_AkwbUToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdffDoZEeCmpu-HRutBsg" annotatedElement="_AkdfezoZEeCmpu-HRutBsg">
        <body>Constraint that must be satisfied when execution is started.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="CommonStructure.fragment.xmi#_D3IzAzoZEeCmpu-HRutBsg"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkdffToZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkdffjoZEeCmpu-HRutBsg"/>
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3IzOjoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkdffzoZEeCmpu-HRutBsg" name="output" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" isOrdered="true" isReadOnly="true" isDerived="true" isDerivedUnion="true" aggregation="composite" association="_AkwbRzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfgDoZEeCmpu-HRutBsg" annotatedElement="_AkdffzoZEeCmpu-HRutBsg">
        <body>The ordered set of output pins connected to the Action. The action places its results onto pins in this set.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkdfgToZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkdfgjoZEeCmpu-HRutBsg"/>
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3IzOjoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedOperation xmi:type="uml:Operation" xmi:id="_AkdfgzoZEeCmpu-HRutBsg" name="context" visibility="public" isQuery="true" bodyCondition="_AkdfhToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfhDoZEeCmpu-HRutBsg" annotatedElement="_AkdfgzoZEeCmpu-HRutBsg">
        <body>Missing derivation for Action::/context : Classifier</body>
      </ownedComment>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_AkdfhToZEeCmpu-HRutBsg" name="spec" constrainedElement="_AkdfgzoZEeCmpu-HRutBsg _AkdfbToZEeCmpu-HRutBsg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfhjoZEeCmpu-HRutBsg">
          <language>OCL</language>
          <body>null</body>
        </specification>
      </ownedRule>
      <ownedParameter xmi:type="uml:Parameter" xmi:id="_AkdfhzoZEeCmpu-HRutBsg" name="result" visibility="public" direction="return">
        <type xmi:type="uml:Class" href="Classification.fragment.xmi#_CHsOcDoZEeCmpu-HRutBsg"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkdfiDoZEeCmpu-HRutBsg"/>
      </ownedParameter>
    </ownedOperation>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AkdfiToZEeCmpu-HRutBsg" name="ActionInputPin">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfijoZEeCmpu-HRutBsg" annotatedElement="_AkdfiToZEeCmpu-HRutBsg">
      <body>An action input pin is a kind of pin that executes an action to determine the values to input to another.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkdfizoZEeCmpu-HRutBsg" name="input_pin" constrainedElement="_AkdfiToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfjDoZEeCmpu-HRutBsg" annotatedElement="_AkdfizoZEeCmpu-HRutBsg">
        <body>The fromAction of an action input pin must only have action input pins as input pins.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfjToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkdfjjoZEeCmpu-HRutBsg" name="one_output_pin" constrainedElement="_AkdfiToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfjzoZEeCmpu-HRutBsg" annotatedElement="_AkdfjjoZEeCmpu-HRutBsg">
        <body>The fromAction of an action input pin must have exactly one output pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfkDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkdfkToZEeCmpu-HRutBsg" name="no_control_or_data_flow" constrainedElement="_AkdfiToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfkjoZEeCmpu-HRutBsg" annotatedElement="_AkdfkToZEeCmpu-HRutBsg">
        <body>The fromAction of an action input pin cannot have control or data flows coming into or out of it or its pins.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfkzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AkdflDoZEeCmpu-HRutBsg" general="_AknQnzoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkdflToZEeCmpu-HRutBsg" name="fromAction" visibility="public" type="_AkdfaDoZEeCmpu-HRutBsg" aggregation="composite" association="_AkwbRDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfljoZEeCmpu-HRutBsg" annotatedElement="_AkdflToZEeCmpu-HRutBsg">
        <body>The action used to provide values.</body>
      </ownedComment>
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3IzOjoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AkdflzoZEeCmpu-HRutBsg" name="AddStructuralFeatureValueAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfmDoZEeCmpu-HRutBsg" annotatedElement="_AkdflzoZEeCmpu-HRutBsg">
      <body>An add structural feature value action is a write structural feature action for adding values to a structural feature.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkdfmToZEeCmpu-HRutBsg" name="required_value" constrainedElement="_AkdflzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfmjoZEeCmpu-HRutBsg" annotatedElement="_AkdfmToZEeCmpu-HRutBsg">
        <body>A value input pin is required.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfmzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>self.value -> notEmpty()</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkdfnDoZEeCmpu-HRutBsg" name="unlimited_natural_and_multiplicity" constrainedElement="_AkdflzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfnToZEeCmpu-HRutBsg" annotatedElement="_AkdfnDoZEeCmpu-HRutBsg">
        <body>Actions adding a value to ordered structural features must have a single input pin for the insertion point with type UnlimitedNatural and multiplicity of 1..1, otherwise the action has no input pin for the insertion point.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfnjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>&#xA;if not structuralFeature.isOrdered&#xA;then insertAt = null&#xA;else &#xA;  let insertAtPin : InputPin= insertAt->asSequence()->first() in&#xA;     insertAt &lt;> null&#xA;    and insertAtPin.type = UnlimitedNatural&#xA;    and insertAtPin.is(1,1)&#xA;endif&#xA;</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AkdfnzoZEeCmpu-HRutBsg" general="_AkdfGDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkdfoDoZEeCmpu-HRutBsg" name="insertAt" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwbQToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfoToZEeCmpu-HRutBsg" annotatedElement="_AkdfoDoZEeCmpu-HRutBsg">
        <body>Gives the position at which to insert a new value or move an existing value in ordered structural features. The type of the pin is UnlimitedNatural, but the value cannot be zero. This pin is omitted for unordered structural features.</body>
      </ownedComment>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkdfojoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkdfozoZEeCmpu-HRutBsg" name="isReplaceAll" visibility="public">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfpDoZEeCmpu-HRutBsg" annotatedElement="_AkdfozoZEeCmpu-HRutBsg">
        <body>Specifies whether existing values of the structural feature of the object should be removed before adding the new value.</body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="PrimitiveTypes.xmi#_PSic1ToZEeCmpu-HRutBsg"/>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_AkdfpToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AkdfpjoZEeCmpu-HRutBsg" name="AddVariableValueAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfpzoZEeCmpu-HRutBsg" annotatedElement="_AkdfpjoZEeCmpu-HRutBsg">
      <body>An add variable value action is a write variable action for adding values to a variable.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkdfqDoZEeCmpu-HRutBsg" name="required_value" constrainedElement="_AkdfpjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfqToZEeCmpu-HRutBsg" annotatedElement="_AkdfqDoZEeCmpu-HRutBsg">
        <body>A value input pin is required.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfqjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>self.value &lt;> null</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkdfqzoZEeCmpu-HRutBsg" name="single_input_pin" constrainedElement="_AkdfpjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfrDoZEeCmpu-HRutBsg" annotatedElement="_AkdfqzoZEeCmpu-HRutBsg">
        <body>Actions adding values to ordered variables must have a single input pin for the insertion point with type UnlimtedNatural and multiplicity of 1..1, otherwise the action has no input pin for the insertion point.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkdfrToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>if not variable.isOrdered&#xA;then insertAt = null&#xA;else&#xA;  let insertAtPin : InputPin = insertAt->asSequence()->first() in&#xA;    insertAt &lt;> null&#xA;    and insertAtPin.type = UnlimitedNatural&#xA;    and insertAtPin.is(1,1)&#xA;endif&#xA;</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AkdfrjoZEeCmpu-HRutBsg" general="_AkdfLToZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkdfrzoZEeCmpu-HRutBsg" name="insertAt" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwbPjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkdfsDoZEeCmpu-HRutBsg" annotatedElement="_AkdfrzoZEeCmpu-HRutBsg">
        <body>Gives the position at which to insert a new value or move an existing value in ordered variables. The types is UnlimitedINatural, but the value cannot be zero. This pin is omitted for unordered variables.</body>
      </ownedComment>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkdfsToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkdfsjoZEeCmpu-HRutBsg" name="isReplaceAll" visibility="public">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknPoDoZEeCmpu-HRutBsg" annotatedElement="_AkdfsjoZEeCmpu-HRutBsg">
        <body>Specifies whether existing values of the variable should be removed before adding the new value.</body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="PrimitiveTypes.xmi#_PSic1ToZEeCmpu-HRutBsg"/>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_AknPoToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknPojoZEeCmpu-HRutBsg" name="BroadcastSignalAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknPozoZEeCmpu-HRutBsg" annotatedElement="_AknPojoZEeCmpu-HRutBsg">
      <body>A broadcast signal action is an action that transmits a signal instance to all the potential target objects in the system, which may cause the firing of a state machine transitions or the execution of associated activities of a target object. The argument values are available to the execution of associated behaviors. The requestor continues execution immediately after the signals are sent out. It does not wait for receipt. Any reply messages are ignored and are not transmitted to the requestor.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknPpDoZEeCmpu-HRutBsg" name="number_and_order" constrainedElement="_AknPojoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknPpToZEeCmpu-HRutBsg" annotatedElement="_AknPpDoZEeCmpu-HRutBsg">
        <body>The number and order of argument pins must be the same as the number and order of attributes in the signal.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknPpjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknPpzoZEeCmpu-HRutBsg" name="type_ordering_multiplicity" constrainedElement="_AknPojoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknPqDoZEeCmpu-HRutBsg" annotatedElement="_AknPpzoZEeCmpu-HRutBsg">
        <body>The type, ordering, and multiplicity of an argument pin must be the same as the corresponding attribute of the signal.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknPqToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknPqjoZEeCmpu-HRutBsg" general="_AknQpToZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknPqzoZEeCmpu-HRutBsg" name="signal" visibility="public" association="_AkwbOjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknPrDoZEeCmpu-HRutBsg" annotatedElement="_AknPqzoZEeCmpu-HRutBsg">
        <body>The specification of signal object transmitted to the target objects.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="SimpleClassifiers.fragment.xmi#_JBTwqToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknPrToZEeCmpu-HRutBsg" name="CallAction" isAbstract="true">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknPrjoZEeCmpu-HRutBsg" annotatedElement="_AknPrToZEeCmpu-HRutBsg">
      <body>CallAction is an abstract class for actions that invoke behavior and receive return values.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknPrzoZEeCmpu-HRutBsg" name="type_ordering_multiplicity" constrainedElement="_AknPrToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknPsDoZEeCmpu-HRutBsg" annotatedElement="_AknPrzoZEeCmpu-HRutBsg">
        <body>The type, ordering, and multiplicity of an argument pin must be the same as the corresponding parameter of the behavior or behavioral feature.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknPsToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknPsjoZEeCmpu-HRutBsg" name="number_and_order" constrainedElement="_AknPrToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknPszoZEeCmpu-HRutBsg" annotatedElement="_AknPsjoZEeCmpu-HRutBsg">
        <body>The number and order of argument pins must be the same as the number and order of parameters of the invoked behavior or behavioral feature. Pins are matched to parameters by order.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknPtDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknPtToZEeCmpu-HRutBsg" name="synchronous_call" constrainedElement="_AknPrToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknPtjoZEeCmpu-HRutBsg" annotatedElement="_AknPtToZEeCmpu-HRutBsg">
        <body>Only synchronous call actions can have result pins.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknPtzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknPuDoZEeCmpu-HRutBsg" general="_AknQpToZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknPuToZEeCmpu-HRutBsg" name="isSynchronous" visibility="public">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknPujoZEeCmpu-HRutBsg" annotatedElement="_AknPuToZEeCmpu-HRutBsg">
        <body>If true, the call is synchronous and the caller waits for completion of the invoked behavior. If false, the call is asynchronous and the caller proceeds immediately and does not expect a return values.</body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="PrimitiveTypes.xmi#_PSic1ToZEeCmpu-HRutBsg"/>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_AknPuzoZEeCmpu-HRutBsg" value="true"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknPvDoZEeCmpu-HRutBsg" name="result" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" isOrdered="true" aggregation="composite" subsettedProperty="_AkdffzoZEeCmpu-HRutBsg" association="_AkwbNzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknPvToZEeCmpu-HRutBsg" annotatedElement="_AknPvDoZEeCmpu-HRutBsg">
        <body>A list of output pins where the results of performing the invocation are placed.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknPvjoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknPvzoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknPwDoZEeCmpu-HRutBsg" name="CallBehaviorAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknPwToZEeCmpu-HRutBsg" annotatedElement="_AknPwDoZEeCmpu-HRutBsg">
      <body>A call behavior action is a call action that invokes a behavior directly rather than invoking a behavioral feature that, in turn, results in the invocation of that behavior. The argument values of the action are available to the execution of the invoked behavior. For synchronous calls the execution of the call behavior action waits until the execution of the invoked behavior completes and a result is returned on its output pin. The action completes immediately without a result, if the call is asynchronous. In particular, the invoked behavior may be an activity.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknPwjoZEeCmpu-HRutBsg" name="result_pin_equal_parameter" constrainedElement="_AknPwDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknPwzoZEeCmpu-HRutBsg" annotatedElement="_AknPwjoZEeCmpu-HRutBsg">
        <body>The number of result pins and the number of parameters of the behavior of type return, out, and in-out must be equal.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknPxDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknPxToZEeCmpu-HRutBsg" name="type_ordering_multiplicity" constrainedElement="_AknPwDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknPxjoZEeCmpu-HRutBsg" annotatedElement="_AknPxToZEeCmpu-HRutBsg">
        <body>The type, ordering, and multiplicity of an argument or result pin is derived from the corresponding parameter of the behavior.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknPxzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknPyDoZEeCmpu-HRutBsg" name="argument_pin_equal_parameter" constrainedElement="_AknPwDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknPyToZEeCmpu-HRutBsg" annotatedElement="_AknPyDoZEeCmpu-HRutBsg">
        <body>The number of argument pins and the number of parameters of the behavior of type in and in-out must be equal.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknPyjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknPyzoZEeCmpu-HRutBsg" general="_AknPrToZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknPzDoZEeCmpu-HRutBsg" name="behavior" visibility="public" association="_AkwbMzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknPzToZEeCmpu-HRutBsg" annotatedElement="_AknPzDoZEeCmpu-HRutBsg">
        <body>The invoked behavior. It must be capable of accepting and returning control.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="CommonBehavior.fragment.xmi#_DF0rXzoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknPzjoZEeCmpu-HRutBsg" name="CallOperationAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknPzzoZEeCmpu-HRutBsg" annotatedElement="_AknPzjoZEeCmpu-HRutBsg">
      <body>A call operation action is an action that transmits an operation call request to the target object, where it may cause the invocation of associated behavior. The argument values of the action are available to the execution of the invoked behavior. If the action is marked synchronous, the execution of the call operation action waits until the execution of the invoked behavior completes and a reply transmission is returned to the caller; otherwise execution of the action is complete when the invocation of the operation is established and the execution of the invoked operation proceeds concurrently with the execution of the calling behavior. Any values returned as part of the reply transmission are put on the result output pins of the call operation action. Upon receipt of the reply transmission, execution of the call operation action is complete.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknP0DoZEeCmpu-HRutBsg" name="type_ordering_multiplicity" constrainedElement="_AknPzjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknP0ToZEeCmpu-HRutBsg" annotatedElement="_AknP0DoZEeCmpu-HRutBsg">
        <body>The type, ordering, and multiplicity of an argument or result pin is derived from the corresponding owned parameter of the operation.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknP0joZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknP0zoZEeCmpu-HRutBsg" name="type_target_pin" constrainedElement="_AknPzjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknP1DoZEeCmpu-HRutBsg" annotatedElement="_AknP0zoZEeCmpu-HRutBsg">
        <body>The type of the target pin must be the same as the type that owns the operation.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknP1ToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknP1joZEeCmpu-HRutBsg" name="argument_pin_equal_parameter" constrainedElement="_AknPzjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknP1zoZEeCmpu-HRutBsg" annotatedElement="_AknP1joZEeCmpu-HRutBsg">
        <body>The number of argument pins and the number of owned parameters of the operation of type in and in-out must be equal.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknP2DoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknP2ToZEeCmpu-HRutBsg" name="result_pin_equal_parameter" constrainedElement="_AknPzjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknP2joZEeCmpu-HRutBsg" annotatedElement="_AknP2ToZEeCmpu-HRutBsg">
        <body>The number of result pins and the number of owned parameters of the operation of type return, out, and in-out must be equal.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknP2zoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknP3DoZEeCmpu-HRutBsg" general="_AknPrToZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknP3ToZEeCmpu-HRutBsg" name="operation" visibility="public" association="_AkwbLzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknP3joZEeCmpu-HRutBsg" annotatedElement="_AknP3ToZEeCmpu-HRutBsg">
        <body>The operation to be invoked by the action execution.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Classification.fragment.xmi#_CH19GjoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknP3zoZEeCmpu-HRutBsg" name="target" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwbLDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknP4DoZEeCmpu-HRutBsg" annotatedElement="_AknP3zoZEeCmpu-HRutBsg">
        <body>The target object to which the request is sent. The classifier of the target object is used to dynamically determine a behavior to invoke. This object constitutes the context of the execution of the operation.</body>
      </ownedComment>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknP4ToZEeCmpu-HRutBsg" name="Clause">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknP4joZEeCmpu-HRutBsg" annotatedElement="_AknP4ToZEeCmpu-HRutBsg">
      <body>A clause is an element that represents a single branch of a conditional construct, including a test and a body section. The body section is executed only if (but not necessarily if) the test section evaluates true.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknP4zoZEeCmpu-HRutBsg" name="body_output_pins" constrainedElement="_AknP4ToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknP5DoZEeCmpu-HRutBsg" annotatedElement="_AknP4zoZEeCmpu-HRutBsg">
        <body>The bodyOutput pins are output pins on actions in the body of the clause.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknP5ToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknP5joZEeCmpu-HRutBsg" name="decider_output" constrainedElement="_AknP4ToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknP5zoZEeCmpu-HRutBsg" annotatedElement="_AknP5joZEeCmpu-HRutBsg">
        <body>The decider output pin must be for the test body or a node contained by the test body as a structured node.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknP6DoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknP6ToZEeCmpu-HRutBsg" name="test_and_body" constrainedElement="_AknP4ToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknP6joZEeCmpu-HRutBsg" annotatedElement="_AknP6ToZEeCmpu-HRutBsg">
        <body>The test and body parts must be disjoint.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknP6zoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknP7DoZEeCmpu-HRutBsg">
      <general xmi:type="uml:Class" href="CommonStructure.fragment.xmi#_D3IzLjoZEeCmpu-HRutBsg"/>
    </generalization>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknP7ToZEeCmpu-HRutBsg" name="body" visibility="public" association="_AkwbKDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknP7joZEeCmpu-HRutBsg" annotatedElement="_AknP7ToZEeCmpu-HRutBsg">
        <body>A nested activity fragment that is executed if the test evaluates to true and the clause is chosen over any concurrent clauses that also evaluate to true.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Activities.fragment.xmi#_BHeu8ToZEeCmpu-HRutBsg"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknP7zoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknP8DoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknP8ToZEeCmpu-HRutBsg" name="bodyOutput" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" isOrdered="true" association="_AkwbIToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknP8joZEeCmpu-HRutBsg" annotatedElement="_AknP8ToZEeCmpu-HRutBsg">
        <body>A list of output pins within the body fragment whose values are moved to the result pins of the containing conditional node after execution of the clause body.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknP8zoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknP9DoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknP9ToZEeCmpu-HRutBsg" name="decider" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" association="_AkwbHjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknP9joZEeCmpu-HRutBsg" annotatedElement="_AknP9ToZEeCmpu-HRutBsg">
        <body>An output pin within the test fragment the value of which is examined after execution of the test to determine whether the body should be executed.</body>
      </ownedComment>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknP9zoZEeCmpu-HRutBsg" name="predecessorClause" visibility="public" type="_AknP4ToZEeCmpu-HRutBsg" association="_AkwbKzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknP-DoZEeCmpu-HRutBsg" annotatedElement="_AknP9zoZEeCmpu-HRutBsg">
        <body>A set of clauses whose tests must all evaluate false before the current clause can be tested.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknP-ToZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknP-joZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknP-zoZEeCmpu-HRutBsg" name="successorClause" visibility="public" type="_AknP4ToZEeCmpu-HRutBsg" association="_AkwbKzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknP_DoZEeCmpu-HRutBsg" annotatedElement="_AknP-zoZEeCmpu-HRutBsg">
        <body>A set of clauses which may not be tested unless the current clause tests false.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknP_ToZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknP_joZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknP_zoZEeCmpu-HRutBsg" name="test" visibility="public" association="_AkwbJToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQADoZEeCmpu-HRutBsg" annotatedElement="_AknP_zoZEeCmpu-HRutBsg">
        <body>A nested activity fragment with a designated output pin that specifies the result of the test.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Activities.fragment.xmi#_BHeu8ToZEeCmpu-HRutBsg"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknQAToZEeCmpu-HRutBsg" value="*"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknQAjoZEeCmpu-HRutBsg" name="ClearAssociationAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknQAzoZEeCmpu-HRutBsg" annotatedElement="_AknQAjoZEeCmpu-HRutBsg">
      <body>A clear association action is an action that destroys all links of an association in which a particular object participates.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQBDoZEeCmpu-HRutBsg" name="multiplicity" constrainedElement="_AknQAjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQBToZEeCmpu-HRutBsg" annotatedElement="_AknQBDoZEeCmpu-HRutBsg">
        <body>The multiplicity of the input pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQBjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>self.object.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQBzoZEeCmpu-HRutBsg" name="same_type" constrainedElement="_AknQAjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQCDoZEeCmpu-HRutBsg" annotatedElement="_AknQBzoZEeCmpu-HRutBsg">
        <body>The type of the input pin must be the same as the type of at least one of the association ends of the association.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQCToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>self.association.memberEnd->exists(type = self.object.type)</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknQCjoZEeCmpu-HRutBsg" general="_AkdfaDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQCzoZEeCmpu-HRutBsg" name="association" visibility="public" association="_AkwbGzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQDDoZEeCmpu-HRutBsg" annotatedElement="_AknQCzoZEeCmpu-HRutBsg">
        <body>Association to be cleared.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="StructuredClassifiers.fragment.xmi#_LPcd4ToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQDToZEeCmpu-HRutBsg" name="object" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwbGDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQDjoZEeCmpu-HRutBsg" annotatedElement="_AknQDToZEeCmpu-HRutBsg">
        <body>Gives the input pin from which is obtained the object whose participation in the association is to be cleared.</body>
      </ownedComment>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknQDzoZEeCmpu-HRutBsg" name="ClearStructuralFeatureAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknQEDoZEeCmpu-HRutBsg" annotatedElement="_AknQDzoZEeCmpu-HRutBsg">
      <body>A clear structural feature action is a structural feature action that removes all values of a structural feature.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQEToZEeCmpu-HRutBsg" name="type_of_result" constrainedElement="_AknQDzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQEjoZEeCmpu-HRutBsg" annotatedElement="_AknQEToZEeCmpu-HRutBsg">
        <body>The type of the result output pin is the same as the type of the inherited object input pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQEzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>result&lt;>null implies result.type = object.type</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQFDoZEeCmpu-HRutBsg" name="multiplicity_of_result" constrainedElement="_AknQDzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQFToZEeCmpu-HRutBsg" annotatedElement="_AknQFDoZEeCmpu-HRutBsg">
        <body>The multiplicity of the result output pin must be 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQFjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>result&lt;>null implies result.is(1,1)</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknQFzoZEeCmpu-HRutBsg" general="_AkwZrzoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQGDoZEeCmpu-HRutBsg" name="result" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdffzoZEeCmpu-HRutBsg" association="_AkwbFToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQGToZEeCmpu-HRutBsg" annotatedElement="_AknQGDoZEeCmpu-HRutBsg">
        <body>Gives the output pin on which the result is put.</body>
      </ownedComment>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknQGjoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknQGzoZEeCmpu-HRutBsg" name="ClearVariableAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknQHDoZEeCmpu-HRutBsg" annotatedElement="_AknQGzoZEeCmpu-HRutBsg">
      <body>A clear variable action is a variable action that removes all values of a variable.</body>
    </ownedComment>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknQHToZEeCmpu-HRutBsg" general="_AkdfCjoZEeCmpu-HRutBsg"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknQHjoZEeCmpu-HRutBsg" name="ConditionalNode">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknQHzoZEeCmpu-HRutBsg" annotatedElement="_AknQHjoZEeCmpu-HRutBsg">
      <body>A conditional node is a structured activity node that represents an exclusive choice among some number of alternatives.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQIDoZEeCmpu-HRutBsg" name="result_no_incoming" constrainedElement="_AknQHjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQIToZEeCmpu-HRutBsg" annotatedElement="_AknQIDoZEeCmpu-HRutBsg">
        <body>The result output pins have no incoming edges.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQIjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQIzoZEeCmpu-HRutBsg" name="no_input_pins" constrainedElement="_AknQHjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQJDoZEeCmpu-HRutBsg" annotatedElement="_AknQIzoZEeCmpu-HRutBsg">
        <body>A conditional node has no input pins.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQJToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQJjoZEeCmpu-HRutBsg" name="one_clause_with_executable_node" constrainedElement="_AknQHjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQJzoZEeCmpu-HRutBsg" annotatedElement="_AknQJjoZEeCmpu-HRutBsg">
        <body>No ExecutableNode may appear in the test or body part of more than one clause of a conditional node.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQKDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQKToZEeCmpu-HRutBsg" name="matching_output_pins" constrainedElement="_AknQHjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQKjoZEeCmpu-HRutBsg" annotatedElement="_AknQKToZEeCmpu-HRutBsg">
        <body>Each clause of a conditional node must have the same number of bodyOutput pins as the conditional node has result output pins, and each clause bodyOutput pin must be compatible with the corresponding result pin (by positional order) in type, multiplicity, ordering and uniqueness.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQKzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQLDoZEeCmpu-HRutBsg" name="executable_nodes" constrainedElement="_AknQHjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQLToZEeCmpu-HRutBsg" annotatedElement="_AknQLDoZEeCmpu-HRutBsg">
        <body>The union of the ExecutabledNodes in the test and body parts of all clauses must be the same as the subset of nodes contained in the ConditionalNode (considered as a StructuredActivityNode) that are ExecutableNodes.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQLjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQLzoZEeCmpu-HRutBsg" name="clause_no_predecessor" constrainedElement="_AknQHjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQMDoZEeCmpu-HRutBsg" annotatedElement="_AknQLzoZEeCmpu-HRutBsg">
        <body>No two clauses within a ConditionalNode maybe predecessor clauses of each other, either directly or indirectly.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQMToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknQMjoZEeCmpu-HRutBsg" general="_AkwZxToZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQMzoZEeCmpu-HRutBsg" name="clause" visibility="public" type="_AknP4ToZEeCmpu-HRutBsg" aggregation="composite" association="_AkwbEDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQNDoZEeCmpu-HRutBsg" annotatedElement="_AknQMzoZEeCmpu-HRutBsg">
        <body>Set of clauses composing the conditional.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknQNToZEeCmpu-HRutBsg" value="*"/>
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3IzOjoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQNjoZEeCmpu-HRutBsg" name="isAssured" visibility="public">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQNzoZEeCmpu-HRutBsg" annotatedElement="_AknQNjoZEeCmpu-HRutBsg">
        <body>If true, the modeler asserts that at least one test will succeed.</body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="PrimitiveTypes.xmi#_PSic1ToZEeCmpu-HRutBsg"/>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_AknQODoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQOToZEeCmpu-HRutBsg" name="isDeterminate" visibility="public">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQOjoZEeCmpu-HRutBsg" annotatedElement="_AknQOToZEeCmpu-HRutBsg">
        <body>If true, the modeler asserts that at most one test will succeed.</body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="PrimitiveTypes.xmi#_PSic1ToZEeCmpu-HRutBsg"/>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_AknQOzoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQPDoZEeCmpu-HRutBsg" name="result" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" isOrdered="true" aggregation="composite" redefinedProperty="_AkwZ5ToZEeCmpu-HRutBsg" association="_AkwbEjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQPToZEeCmpu-HRutBsg" annotatedElement="_AknQPDoZEeCmpu-HRutBsg">
        <body>A list of output pins that constitute the data flow outputs of the conditional.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknQPjoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknQPzoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknQQDoZEeCmpu-HRutBsg" name="CreateLinkAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknQQToZEeCmpu-HRutBsg" annotatedElement="_AknQQDoZEeCmpu-HRutBsg">
      <body>A create link action is a write link action for creating links.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQQjoZEeCmpu-HRutBsg" name="association_not_abstract" constrainedElement="_AknQQDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQQzoZEeCmpu-HRutBsg" annotatedElement="_AknQQjoZEeCmpu-HRutBsg">
        <body>The association cannot be an abstract classifier.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQRDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>not self.association().isAbstract</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknQRToZEeCmpu-HRutBsg" general="_AkdfEjoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQRjoZEeCmpu-HRutBsg" name="endData" visibility="public" type="_AknQyzoZEeCmpu-HRutBsg" aggregation="composite" redefinedProperty="_AknQvzoZEeCmpu-HRutBsg" association="_AkwbDToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQRzoZEeCmpu-HRutBsg" annotatedElement="_AknQRjoZEeCmpu-HRutBsg">
        <body>Specifies ends of association and inputs.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknQSDoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknQSToZEeCmpu-HRutBsg" value="2"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknQSjoZEeCmpu-HRutBsg" name="CreateLinkObjectAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknQSzoZEeCmpu-HRutBsg" annotatedElement="_AknQSjoZEeCmpu-HRutBsg">
      <body>A create link object action creates a link object.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQTDoZEeCmpu-HRutBsg" name="multiplicity" constrainedElement="_AknQSjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQTToZEeCmpu-HRutBsg" annotatedElement="_AknQTDoZEeCmpu-HRutBsg">
        <body>The multiplicity of the output pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQTjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>result.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQTzoZEeCmpu-HRutBsg" name="type_of_result" constrainedElement="_AknQSjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQUDoZEeCmpu-HRutBsg" annotatedElement="_AknQTzoZEeCmpu-HRutBsg">
        <body>The type of the result pin must be the same as the association of the action.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQUToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>result.type = association()</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQUjoZEeCmpu-HRutBsg" name="association_class" constrainedElement="_AknQSjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQUzoZEeCmpu-HRutBsg" annotatedElement="_AknQUjoZEeCmpu-HRutBsg">
        <body>The association must be an association class.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQVDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>self.association().oclIsKindOf(Class)</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknQVToZEeCmpu-HRutBsg" general="_AknQQDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQVjoZEeCmpu-HRutBsg" name="result" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdffzoZEeCmpu-HRutBsg" association="_AkwbCjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQVzoZEeCmpu-HRutBsg" annotatedElement="_AknQVjoZEeCmpu-HRutBsg">
        <body>Gives the output pin on which the result is put.</body>
      </ownedComment>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknQWDoZEeCmpu-HRutBsg" name="CreateObjectAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknQWToZEeCmpu-HRutBsg" annotatedElement="_AknQWDoZEeCmpu-HRutBsg">
      <body>A create object action is an action that creates an object that conforms to a statically specified classifier and puts it on an output pin at runtime.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQWjoZEeCmpu-HRutBsg" name="classifier_not_abstract" constrainedElement="_AknQWDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQWzoZEeCmpu-HRutBsg" annotatedElement="_AknQWjoZEeCmpu-HRutBsg">
        <body>The classifier cannot be abstract.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQXDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>not classifier.isAbstract </body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQXToZEeCmpu-HRutBsg" name="multiplicity" constrainedElement="_AknQWDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQXjoZEeCmpu-HRutBsg" annotatedElement="_AknQXToZEeCmpu-HRutBsg">
        <body>The multiplicity of the output pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQXzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>result.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQYDoZEeCmpu-HRutBsg" name="classifier_not_association_class" constrainedElement="_AknQWDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQYToZEeCmpu-HRutBsg" annotatedElement="_AknQYDoZEeCmpu-HRutBsg">
        <body>The classifier cannot be an association class</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQYjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>not classifier.oclIsKindOf(AssociationClass)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQYzoZEeCmpu-HRutBsg" name="same_type" constrainedElement="_AknQWDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQZDoZEeCmpu-HRutBsg" annotatedElement="_AknQYzoZEeCmpu-HRutBsg">
        <body>The type of the result pin must be the same as the classifier of the action.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQZToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>result.type = classifier</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknQZjoZEeCmpu-HRutBsg" general="_AkdfaDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQZzoZEeCmpu-HRutBsg" name="classifier" visibility="public" association="_AkwbAzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQaDoZEeCmpu-HRutBsg" annotatedElement="_AknQZzoZEeCmpu-HRutBsg">
        <body>Classifier to be instantiated.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Classification.fragment.xmi#_CHsOcDoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQaToZEeCmpu-HRutBsg" name="result" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdffzoZEeCmpu-HRutBsg" association="_AkwbBzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQajoZEeCmpu-HRutBsg" annotatedElement="_AknQaToZEeCmpu-HRutBsg">
        <body>Gives the output pin on which the result is put.</body>
      </ownedComment>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknQazoZEeCmpu-HRutBsg" name="DestroyLinkAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknQbDoZEeCmpu-HRutBsg" annotatedElement="_AknQazoZEeCmpu-HRutBsg">
      <body>A destroy link action is a write link action that destroys links and link objects.</body>
    </ownedComment>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknQbToZEeCmpu-HRutBsg" general="_AkdfEjoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQbjoZEeCmpu-HRutBsg" name="endData" visibility="public" type="_AknQ9ToZEeCmpu-HRutBsg" aggregation="composite" redefinedProperty="_AknQvzoZEeCmpu-HRutBsg" association="_AkwbADoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQbzoZEeCmpu-HRutBsg" annotatedElement="_AknQbjoZEeCmpu-HRutBsg">
        <body>Specifies ends of association and inputs.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknQcDoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknQcToZEeCmpu-HRutBsg" value="2"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknQcjoZEeCmpu-HRutBsg" name="DestroyObjectAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknQczoZEeCmpu-HRutBsg" annotatedElement="_AknQcjoZEeCmpu-HRutBsg">
      <body>A destroy object action is an action that destroys objects.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQdDoZEeCmpu-HRutBsg" name="multiplicity" constrainedElement="_AknQcjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQdToZEeCmpu-HRutBsg" annotatedElement="_AknQdDoZEeCmpu-HRutBsg">
        <body>The multiplicity of the input pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQdjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>target.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQdzoZEeCmpu-HRutBsg" name="no_type" constrainedElement="_AknQcjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQeDoZEeCmpu-HRutBsg" annotatedElement="_AknQdzoZEeCmpu-HRutBsg">
        <body>The input pin has no type.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQeToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>target.type= null</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknQejoZEeCmpu-HRutBsg" general="_AkdfaDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQezoZEeCmpu-HRutBsg" name="isDestroyLinks" visibility="public">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQfDoZEeCmpu-HRutBsg" annotatedElement="_AknQezoZEeCmpu-HRutBsg">
        <body>Specifies whether links in which the object participates are destroyed along with the object.</body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="PrimitiveTypes.xmi#_PSic1ToZEeCmpu-HRutBsg"/>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_AknQfToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQfjoZEeCmpu-HRutBsg" name="isDestroyOwnedObjects" visibility="public">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQfzoZEeCmpu-HRutBsg" annotatedElement="_AknQfjoZEeCmpu-HRutBsg">
        <body>Specifies whether objects owned by the object are destroyed along with the object.</body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="PrimitiveTypes.xmi#_PSic1ToZEeCmpu-HRutBsg"/>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_AknQgDoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQgToZEeCmpu-HRutBsg" name="target" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_Akwa_ToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQgjoZEeCmpu-HRutBsg" annotatedElement="_AknQgToZEeCmpu-HRutBsg">
        <body>The input pin providing the object to be destroyed.</body>
      </ownedComment>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknQgzoZEeCmpu-HRutBsg" name="ExpansionNode">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknQhDoZEeCmpu-HRutBsg" annotatedElement="_AknQgzoZEeCmpu-HRutBsg">
      <body>An expansion node is an object node used to indicate a flow across the boundary of an expansion region. A flow into a region contains a collection that is broken into its individual elements inside the region, which is executed once per element. A flow out of a region combines individual elements into a collection for use outside the region.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQhToZEeCmpu-HRutBsg" name="region_as_input_or_output" constrainedElement="_AknQgzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQhjoZEeCmpu-HRutBsg" annotatedElement="_AknQhToZEeCmpu-HRutBsg">
        <body>One of regionAsInput or regionAsOutput must be non-empty, but not both.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQhzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknQiDoZEeCmpu-HRutBsg">
      <general xmi:type="uml:Class" href="Activities.fragment.xmi#_BHevYjoZEeCmpu-HRutBsg"/>
    </generalization>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQiToZEeCmpu-HRutBsg" name="regionAsInput" visibility="public" type="_AknQjzoZEeCmpu-HRutBsg" association="_Akwa-zoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQijoZEeCmpu-HRutBsg" annotatedElement="_AknQiToZEeCmpu-HRutBsg">
        <body>The expansion region for which the node is an input.</body>
      </ownedComment>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknQizoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQjDoZEeCmpu-HRutBsg" name="regionAsOutput" visibility="public" type="_AknQjzoZEeCmpu-HRutBsg" association="_Akwa_DoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQjToZEeCmpu-HRutBsg" annotatedElement="_AknQjDoZEeCmpu-HRutBsg">
        <body>The expansion region for which the node is an output.</body>
      </ownedComment>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknQjjoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknQjzoZEeCmpu-HRutBsg" name="ExpansionRegion">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknQkDoZEeCmpu-HRutBsg" annotatedElement="_AknQjzoZEeCmpu-HRutBsg">
      <body>An expansion region is a structured activity region that executes multiple times corresponding to elements of an input collection.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQkToZEeCmpu-HRutBsg" name="expansion_nodes" constrainedElement="_AknQjzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQkjoZEeCmpu-HRutBsg" annotatedElement="_AknQkToZEeCmpu-HRutBsg">
        <body>An ExpansionRegion must have one or more argument ExpansionNodes and zero or more result ExpansionNodes.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQkzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknQlDoZEeCmpu-HRutBsg" general="_AkwZxToZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQlToZEeCmpu-HRutBsg" name="inputElement" visibility="public" type="_AknQgzoZEeCmpu-HRutBsg" association="_Akwa-zoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQljoZEeCmpu-HRutBsg" annotatedElement="_AknQlToZEeCmpu-HRutBsg">
        <body>An object node that holds a separate element of the input collection during each of the multiple executions of the region.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknQlzoZEeCmpu-HRutBsg" value="*"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQmDoZEeCmpu-HRutBsg" name="mode" visibility="public" type="_AkdfOToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQmToZEeCmpu-HRutBsg" annotatedElement="_AknQmDoZEeCmpu-HRutBsg">
        <body>The way in which the executions interact: parallel: all interactions are independent iterative: the interactions occur in order of the elements stream: a stream of values flows into a single execution</body>
      </ownedComment>
      <defaultValue xmi:type="uml:InstanceValue" xmi:id="_AknQmjoZEeCmpu-HRutBsg" type="_AkdfOToZEeCmpu-HRutBsg" instance="_AkdfPToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQmzoZEeCmpu-HRutBsg" name="outputElement" visibility="public" type="_AknQgzoZEeCmpu-HRutBsg" association="_Akwa_DoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQnDoZEeCmpu-HRutBsg" annotatedElement="_AknQmzoZEeCmpu-HRutBsg">
        <body>An object node that accepts a separate element of the output collection during each of the multiple executions of the region. The values are formed into a collection that is available when the execution of the region is complete.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknQnToZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknQnjoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknQnzoZEeCmpu-HRutBsg" name="InputPin">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknQoDoZEeCmpu-HRutBsg" annotatedElement="_AknQnzoZEeCmpu-HRutBsg">
      <body>An input pin is a pin that holds input values to be consumed by an action.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQoToZEeCmpu-HRutBsg" name="outgoing_edges_structured_only" constrainedElement="_AknQnzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQojoZEeCmpu-HRutBsg" annotatedElement="_AknQoToZEeCmpu-HRutBsg">
        <body>Input pins may have outgoing edges only when they are on actions that are structured nodes, and these edges must target a node contained by the structured node.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQozoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknQpDoZEeCmpu-HRutBsg" general="_AknRTDoZEeCmpu-HRutBsg"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknQpToZEeCmpu-HRutBsg" name="InvocationAction" isAbstract="true">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknQpjoZEeCmpu-HRutBsg" annotatedElement="_AknQpToZEeCmpu-HRutBsg">
      <body>In addition to targeting an object, invocation actions can also invoke behavioral features on ports from where the invocation requests are routed onwards on links deriving from attached connectors. Invocation actions may also be sent to a target via a given port, either on the sending object or on another object.
InvocationAction is an abstract class for the various actions that invoke behavior.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQqDoZEeCmpu-HRutBsg" name="on_port_receiver" constrainedElement="_AknQpToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQqToZEeCmpu-HRutBsg" annotatedElement="_AknQqDoZEeCmpu-HRutBsg">
        <body>The onPort must be a port on the receiver object.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQqjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknQqzoZEeCmpu-HRutBsg" general="_AkdfaDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQrDoZEeCmpu-HRutBsg" name="argument" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" isOrdered="true" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_Akwa9DoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQrToZEeCmpu-HRutBsg" annotatedElement="_AknQrDoZEeCmpu-HRutBsg">
        <body>Specification of the ordered set of argument values that appears during execution.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknQrjoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknQrzoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQsDoZEeCmpu-HRutBsg" name="onPort" visibility="public" association="_Akwa9zoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQsToZEeCmpu-HRutBsg" annotatedElement="_AknQsDoZEeCmpu-HRutBsg">
        <body>A optional port of the receiver object on which the behavioral feature is invoked.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="StructuredClassifiers.fragment.xmi#_LPmMkzoZEeCmpu-HRutBsg"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknQsjoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknQszoZEeCmpu-HRutBsg" name="LinkAction" isAbstract="true">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknQtDoZEeCmpu-HRutBsg" annotatedElement="_AknQszoZEeCmpu-HRutBsg">
      <body>LinkAction is an abstract class for all link actions that identify their links by the objects at the ends of the links and by the qualifiers at ends of the links.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQtToZEeCmpu-HRutBsg" name="same_pins" constrainedElement="_AknQszoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQtjoZEeCmpu-HRutBsg" annotatedElement="_AknQtToZEeCmpu-HRutBsg">
        <body>The input pins of the action are the same as the pins of the link end data and insertion pins.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQtzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>self.input->asSet() =&#xA;let ledpins : Set(InputPin) = self.endData->collect(value)->asSet() in&#xA;  if self.oclIsKindOf(LinkEndCreationData)&#xA;  then ledpins->union(self.endData.oclAsType(LinkEndCreationData).insertAt->asSet())&#xA;  else ledpins&#xA;endif&#xA;</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQuDoZEeCmpu-HRutBsg" name="same_association" constrainedElement="_AknQszoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQuToZEeCmpu-HRutBsg" annotatedElement="_AknQuDoZEeCmpu-HRutBsg">
        <body>The association ends of the link end data must all be from the same association and include all and only the association ends of that association.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQujoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>self.endData->collect(end) = self.association()->collect(memberEnd)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQuzoZEeCmpu-HRutBsg" name="not_static" constrainedElement="_AknQszoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQvDoZEeCmpu-HRutBsg" annotatedElement="_AknQuzoZEeCmpu-HRutBsg">
        <body>The association ends of the link end data must not be static.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQvToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>endData->forAll(not end.isStatic)</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknQvjoZEeCmpu-HRutBsg" general="_AkdfaDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQvzoZEeCmpu-HRutBsg" name="endData" visibility="public" type="_AknQ2joZEeCmpu-HRutBsg" aggregation="composite" association="_Akwa8joZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQwDoZEeCmpu-HRutBsg" annotatedElement="_AknQvzoZEeCmpu-HRutBsg">
        <body>Data identifying one end of a link by the objects on its ends and qualifiers.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknQwToZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknQwjoZEeCmpu-HRutBsg" value="2"/>
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3IzOjoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQwzoZEeCmpu-HRutBsg" name="inputValue" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_Akwa7zoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQxDoZEeCmpu-HRutBsg" annotatedElement="_AknQwzoZEeCmpu-HRutBsg">
        <body>Pins taking end objects and qualifier values as input.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknQxToZEeCmpu-HRutBsg" value="*"/>
    </ownedAttribute>
    <ownedOperation xmi:type="uml:Operation" xmi:id="_AknQxjoZEeCmpu-HRutBsg" name="association" visibility="public" isQuery="true" bodyCondition="_AknQyDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQxzoZEeCmpu-HRutBsg" annotatedElement="_AknQxjoZEeCmpu-HRutBsg">
        <body>The association operates on LinkAction. It returns the association of the action.</body>
      </ownedComment>
      <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQyDoZEeCmpu-HRutBsg" name="spec" constrainedElement="_AknQxjoZEeCmpu-HRutBsg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQyToZEeCmpu-HRutBsg">
          <language>OCL</language>
          <body>endData->asSequence()->first().end.association</body>
        </specification>
      </ownedRule>
      <ownedParameter xmi:type="uml:Parameter" xmi:id="_AknQyjoZEeCmpu-HRutBsg" name="result" visibility="public" direction="return">
        <type xmi:type="uml:Class" href="StructuredClassifiers.fragment.xmi#_LPcd4ToZEeCmpu-HRutBsg"/>
      </ownedParameter>
    </ownedOperation>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknQyzoZEeCmpu-HRutBsg" name="LinkEndCreationData">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknQzDoZEeCmpu-HRutBsg" annotatedElement="_AknQyzoZEeCmpu-HRutBsg">
      <body>A link end creation data is not an action. It is an element that identifies links. It identifies one end of a link to be created by a create link action.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQzToZEeCmpu-HRutBsg" name="single_input_pin" constrainedElement="_AknQyzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQzjoZEeCmpu-HRutBsg" annotatedElement="_AknQzToZEeCmpu-HRutBsg">
        <body>Link end creation data for ordered association ends must have a single input pin for the insertion point with type UnlimitedNatural and multiplicity of 1..1, otherwise the action has no input pin for the insertion point.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQzzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>if  not end.isOrdered&#xA;then insertAt = null&#xA;else&#xA;  let insertAtPin : InputPin = insertAt->asSequence()->first() in&#xA;    insertAt &lt;> null&#xA;    and insertAtPin.type = UnlimitedNatural&#xA;    and insertAtPin.is(1,1)&#xA;endif&#xA;</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQ0DoZEeCmpu-HRutBsg" name="create_link_action" constrainedElement="_AknQyzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQ0ToZEeCmpu-HRutBsg" annotatedElement="_AknQ0DoZEeCmpu-HRutBsg">
        <body>LinkEndCreationData can only be end data for CreateLinkAction or one of its specializations.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQ0joZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknQ0zoZEeCmpu-HRutBsg" general="_AknQ2joZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQ1DoZEeCmpu-HRutBsg" name="insertAt" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" association="_Akwa7DoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQ1ToZEeCmpu-HRutBsg" annotatedElement="_AknQ1DoZEeCmpu-HRutBsg">
        <body>Specifies where the new link should be inserted for ordered association ends, or where an existing link should be moved to. The type of the input is UnlimitedNatural, but the input cannot be zero. This pin is omitted for association ends that are not ordered.</body>
      </ownedComment>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknQ1joZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQ1zoZEeCmpu-HRutBsg" name="isReplaceAll" visibility="public">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQ2DoZEeCmpu-HRutBsg" annotatedElement="_AknQ1zoZEeCmpu-HRutBsg">
        <body>Specifies whether the existing links emanating from the object on this end should be destroyed before creating a new link.</body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="PrimitiveTypes.xmi#_PSic1ToZEeCmpu-HRutBsg"/>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_AknQ2ToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknQ2joZEeCmpu-HRutBsg" name="LinkEndData">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknQ2zoZEeCmpu-HRutBsg" annotatedElement="_AknQ2joZEeCmpu-HRutBsg">
      <body>A link end data is not an action. It is an element that identifies links. It identifies one end of a link to be read or written by the children of a link action. A link cannot be passed as a runtime value to or from an action. Instead, a link is identified by its end objects and qualifier values, if any. This requires more than one piece of data, namely, the statically-specified end in the user model, the object on the end, and the qualifier values for that end, if any. These pieces are brought together around a link end data. Each association end is identified separately with an instance of the LinkEndData class.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQ3DoZEeCmpu-HRutBsg" name="same_type" constrainedElement="_AknQ2joZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQ3ToZEeCmpu-HRutBsg" annotatedElement="_AknQ3DoZEeCmpu-HRutBsg">
        <body>The type of the end object input pin is the same as the type of the association end.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQ3joZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>value.type = end.type</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQ3zoZEeCmpu-HRutBsg" name="multiplicity" constrainedElement="_AknQ2joZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQ4DoZEeCmpu-HRutBsg" annotatedElement="_AknQ3zoZEeCmpu-HRutBsg">
        <body>The multiplicity of the end object input pin must be 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQ4ToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>self.value.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQ4joZEeCmpu-HRutBsg" name="end_object_input_pin" constrainedElement="_AknQ2joZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQ4zoZEeCmpu-HRutBsg" annotatedElement="_AknQ4joZEeCmpu-HRutBsg">
        <body>The end object input pin is not also a qualifier value input pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQ5DoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>value->excludesAll(qualifier.value)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQ5ToZEeCmpu-HRutBsg" name="property_is_association_end" constrainedElement="_AknQ2joZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQ5joZEeCmpu-HRutBsg" annotatedElement="_AknQ5ToZEeCmpu-HRutBsg">
        <body>The property must be an association end.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQ5zoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>end.association &lt;> null</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQ6DoZEeCmpu-HRutBsg" name="qualifiers" constrainedElement="_AknQ2joZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQ6ToZEeCmpu-HRutBsg" annotatedElement="_AknQ6DoZEeCmpu-HRutBsg">
        <body>The qualifiers include all and only the qualifiers of the association end.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQ6joZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>qualifier->collect(qualifier)->asSet() = end.qualifier</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknQ6zoZEeCmpu-HRutBsg">
      <general xmi:type="uml:Class" href="CommonStructure.fragment.xmi#_D3IzLjoZEeCmpu-HRutBsg"/>
    </generalization>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQ7DoZEeCmpu-HRutBsg" name="end" visibility="public" association="_Akwa5joZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQ7ToZEeCmpu-HRutBsg" annotatedElement="_AknQ7DoZEeCmpu-HRutBsg">
        <body>Association end for which this link-end data specifies values.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Classification.fragment.xmi#_CH192ToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQ7joZEeCmpu-HRutBsg" name="qualifier" visibility="public" type="_AknRVzoZEeCmpu-HRutBsg" aggregation="composite" association="_Akwa6joZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQ7zoZEeCmpu-HRutBsg" annotatedElement="_AknQ7joZEeCmpu-HRutBsg">
        <body>List of qualifier values</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknQ8DoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknQ8ToZEeCmpu-HRutBsg"/>
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3IzOjoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQ8joZEeCmpu-HRutBsg" name="value" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" association="_Akwa4zoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQ8zoZEeCmpu-HRutBsg" annotatedElement="_AknQ8joZEeCmpu-HRutBsg">
        <body>Input pin that provides the specified object for the given end. This pin is omitted if the link-end data specifies an 'open' end for reading.</body>
      </ownedComment>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknQ9DoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknQ9ToZEeCmpu-HRutBsg" name="LinkEndDestructionData">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknQ9joZEeCmpu-HRutBsg" annotatedElement="_AknQ9ToZEeCmpu-HRutBsg">
      <body>A link end destruction data is not an action. It is an element that identifies links. It identifies one end of a link to be destroyed by destroy link action.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQ9zoZEeCmpu-HRutBsg" name="unlimited_natural_and_multiplicity" constrainedElement="_AknQ9ToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQ-DoZEeCmpu-HRutBsg" annotatedElement="_AknQ9zoZEeCmpu-HRutBsg">
        <body>LinkEndDestructionData for ordered nonunique association ends must have a single destroyAt input pin if isDestroyDuplicates is false. It must be of type UnlimitedNatural and have a multiplicity of 1..1. Otherwise, the action has no input pin for the removal position.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQ-ToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknQ-joZEeCmpu-HRutBsg" name="destroy_link_action" constrainedElement="_AknQ9ToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQ-zoZEeCmpu-HRutBsg" annotatedElement="_AknQ-joZEeCmpu-HRutBsg">
        <body>LinkEndDestructionData can only be end data for DestroyLinkAction or one of its specializations.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknQ_DoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknQ_ToZEeCmpu-HRutBsg" general="_AknQ2joZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknQ_joZEeCmpu-HRutBsg" name="destroyAt" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" association="_Akwa4DoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknQ_zoZEeCmpu-HRutBsg" annotatedElement="_AknQ_joZEeCmpu-HRutBsg">
        <body>Specifies the position of an existing link to be destroyed in ordered nonunique association ends. The type of the pin is UnlimitedNatural, but the value cannot be zero or unlimited.</body>
      </ownedComment>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknRADoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRAToZEeCmpu-HRutBsg" name="isDestroyDuplicates" visibility="public">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRAjoZEeCmpu-HRutBsg" annotatedElement="_AknRAToZEeCmpu-HRutBsg">
        <body>Specifies whether to destroy duplicates of the value in nonunique association ends.</body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="PrimitiveTypes.xmi#_PSic1ToZEeCmpu-HRutBsg"/>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_AknRAzoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknRBDoZEeCmpu-HRutBsg" name="LoopNode">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknRBToZEeCmpu-HRutBsg" annotatedElement="_AknRBDoZEeCmpu-HRutBsg">
      <body>A loop node is a structured activity node that represents a loop with setup, test, and body sections.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRBjoZEeCmpu-HRutBsg" name="result_no_incoming" constrainedElement="_AknRBDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRBzoZEeCmpu-HRutBsg" annotatedElement="_AknRBjoZEeCmpu-HRutBsg">
        <body>The result output pins have no incoming edges.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRCDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRCToZEeCmpu-HRutBsg" name="input_edges" constrainedElement="_AknRBDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRCjoZEeCmpu-HRutBsg" annotatedElement="_AknRCToZEeCmpu-HRutBsg">
        <body>Loop variable inputs must not have outgoing edges.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRCzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRDDoZEeCmpu-HRutBsg" name="executable_nodes" constrainedElement="_AknRBDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRDToZEeCmpu-HRutBsg" annotatedElement="_AknRDDoZEeCmpu-HRutBsg">
        <body>The union of the ExecutableNodes in the setupPart, test and bodyPart of a LoopNode must be the same as the subset of nodes contained in the LoopNode (considered as a StructuredActivityNode) that are ExecutableNodes.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRDjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRDzoZEeCmpu-HRutBsg" name="body_output_pins" constrainedElement="_AknRBDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknREDoZEeCmpu-HRutBsg" annotatedElement="_AknRDzoZEeCmpu-HRutBsg">
        <body>The bodyOutput pins are output pins on actions in the body of the loop node.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknREToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknREjoZEeCmpu-HRutBsg" general="_AkwZxToZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknREzoZEeCmpu-HRutBsg" name="bodyOutput" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" isOrdered="true" association="_Akwa0zoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRFDoZEeCmpu-HRutBsg" annotatedElement="_AknREzoZEeCmpu-HRutBsg">
        <body>A list of output pins within the body fragment the values of which are moved to the loop variable pins after completion of execution of the body, before the next iteration of the loop begins or before the loop exits.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknRFToZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknRFjoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRFzoZEeCmpu-HRutBsg" name="bodyPart" visibility="public" association="_AkwayjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRGDoZEeCmpu-HRutBsg" annotatedElement="_AknRFzoZEeCmpu-HRutBsg">
        <body>The set of nodes and edges that perform the repetitive computations of the loop. The body section is executed as long as the test section produces a true value.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Activities.fragment.xmi#_BHeu8ToZEeCmpu-HRutBsg"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknRGToZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknRGjoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRGzoZEeCmpu-HRutBsg" name="decider" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" association="_Akwa3ToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRHDoZEeCmpu-HRutBsg" annotatedElement="_AknRGzoZEeCmpu-HRutBsg">
        <body>An output pin within the test fragment the value of which is examined after execution of the test to determine whether to execute the loop body.</body>
      </ownedComment>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRHToZEeCmpu-HRutBsg" name="isTestedFirst" visibility="public">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRHjoZEeCmpu-HRutBsg" annotatedElement="_AknRHToZEeCmpu-HRutBsg">
        <body>If true, the test is performed before the first execution of the body. If false, the body is executed once before the test is performed.</body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="PrimitiveTypes.xmi#_PSic1ToZEeCmpu-HRutBsg"/>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_AknRHzoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRIDoZEeCmpu-HRutBsg" name="loopVariable" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" isOrdered="true" association="_AkwazToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRIToZEeCmpu-HRutBsg" annotatedElement="_AknRIDoZEeCmpu-HRutBsg">
        <body>A list of output pins that hold the values of the loop variables during an execution of the loop. When the test fails, the values are movied to the result pins of the loop.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknRIjoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknRIzoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRJDoZEeCmpu-HRutBsg" name="loopVariableInput" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" isOrdered="true" aggregation="composite" redefinedProperty="_AkwZ4joZEeCmpu-HRutBsg" association="_Akwa1zoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRJToZEeCmpu-HRutBsg" annotatedElement="_AknRJDoZEeCmpu-HRutBsg">
        <body>A list of values that are moved into the loop variable pins before the first iteration of the loop.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknRJjoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknRJzoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRKDoZEeCmpu-HRutBsg" name="result" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" isOrdered="true" aggregation="composite" redefinedProperty="_AkwZ5ToZEeCmpu-HRutBsg" association="_Akwa0DoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRKToZEeCmpu-HRutBsg" annotatedElement="_AknRKDoZEeCmpu-HRutBsg">
        <body>A list of output pins that constitute the data flow output of the entire loop.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknRKjoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknRKzoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRLDoZEeCmpu-HRutBsg" name="setupPart" visibility="public" association="_AkwaxzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRLToZEeCmpu-HRutBsg" annotatedElement="_AknRLDoZEeCmpu-HRutBsg">
        <body>The set of nodes and edges that initialize values or perform other setup computations for the loop.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Activities.fragment.xmi#_BHeu8ToZEeCmpu-HRutBsg"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknRLjoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknRLzoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRMDoZEeCmpu-HRutBsg" name="test" visibility="public" association="_Akwa2joZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRMToZEeCmpu-HRutBsg" annotatedElement="_AknRMDoZEeCmpu-HRutBsg">
        <body>The set of nodes, edges, and designated value that compute a Boolean value to determine if another execution of the body will be performed.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Activities.fragment.xmi#_BHeu8ToZEeCmpu-HRutBsg"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknRMjoZEeCmpu-HRutBsg" value="*"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknRMzoZEeCmpu-HRutBsg" name="OpaqueAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknRNDoZEeCmpu-HRutBsg" annotatedElement="_AknRMzoZEeCmpu-HRutBsg">
      <body>An action with implementation-specific semantics.</body>
    </ownedComment>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknRNToZEeCmpu-HRutBsg" general="_AkdfaDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRNjoZEeCmpu-HRutBsg" name="body" visibility="public" isOrdered="true" isUnique="false">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRNzoZEeCmpu-HRutBsg" annotatedElement="_AknRNjoZEeCmpu-HRutBsg">
        <body>Specifies the action in one or more languages.</body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="PrimitiveTypes.xmi#_PSic2zoZEeCmpu-HRutBsg"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknRODoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknROToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknROjoZEeCmpu-HRutBsg" name="inputValue" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwaxDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknROzoZEeCmpu-HRutBsg" annotatedElement="_AknROjoZEeCmpu-HRutBsg">
        <body>Provides input to the action.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknRPDoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknRPToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRPjoZEeCmpu-HRutBsg" name="language" visibility="public" isOrdered="true">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRPzoZEeCmpu-HRutBsg" annotatedElement="_AknRPjoZEeCmpu-HRutBsg">
        <body>Languages the body strings use, in the same order as the body strings</body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="PrimitiveTypes.xmi#_PSic2zoZEeCmpu-HRutBsg"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknRQDoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknRQToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRQjoZEeCmpu-HRutBsg" name="outputValue" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdffzoZEeCmpu-HRutBsg" association="_AkwawToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRQzoZEeCmpu-HRutBsg" annotatedElement="_AknRQjoZEeCmpu-HRutBsg">
        <body>Takes output from the action.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknRRDoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknRRToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknRRjoZEeCmpu-HRutBsg" name="OutputPin">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknRRzoZEeCmpu-HRutBsg" annotatedElement="_AknRRjoZEeCmpu-HRutBsg">
      <body>An output pin is a pin that holds output values produced by an action.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRSDoZEeCmpu-HRutBsg" name="incoming_edges_structured_only" constrainedElement="_AknRRjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRSToZEeCmpu-HRutBsg" annotatedElement="_AknRSDoZEeCmpu-HRutBsg">
        <body>Output pins may have incoming edges only when they are on actions that are structured nodes, and these edges may not target a node contained by the structured node.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRSjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknRSzoZEeCmpu-HRutBsg" general="_AknRTDoZEeCmpu-HRutBsg"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknRTDoZEeCmpu-HRutBsg" name="Pin" isAbstract="true">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknRTToZEeCmpu-HRutBsg" annotatedElement="_AknRTDoZEeCmpu-HRutBsg">
      <body>A pin is an object node for inputs and outputs to actions.
A pin is a typed element and multiplicity element that provides values to actions and accept result values from them.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRTzoZEeCmpu-HRutBsg" name="control_pins" constrainedElement="_AknRTDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRUDoZEeCmpu-HRutBsg" annotatedElement="_AknRTzoZEeCmpu-HRutBsg">
        <body>Control pins have a control type</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRUToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>isControl implies isControlType</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknRUjoZEeCmpu-HRutBsg">
      <general xmi:type="uml:Class" href="Activities.fragment.xmi#_BHevYjoZEeCmpu-HRutBsg"/>
    </generalization>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknRUzoZEeCmpu-HRutBsg">
      <general xmi:type="uml:Class" href="CommonStructure.fragment.xmi#_D3IzZToZEeCmpu-HRutBsg"/>
    </generalization>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRVDoZEeCmpu-HRutBsg" name="isControl" visibility="public">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRVToZEeCmpu-HRutBsg" annotatedElement="_AknRVDoZEeCmpu-HRutBsg">
        <body>Tells whether the pins provide data to the actions, or just controls when it executes it.</body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="PrimitiveTypes.xmi#_PSic1ToZEeCmpu-HRutBsg"/>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_AknRVjoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknRVzoZEeCmpu-HRutBsg" name="QualifierValue">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknRWDoZEeCmpu-HRutBsg" annotatedElement="_AknRVzoZEeCmpu-HRutBsg">
      <body>A qualifier value is not an action. It is an element that identifies links. It gives a single qualifier within a link end data specification.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRWToZEeCmpu-HRutBsg" name="multiplicity_of_qualifier" constrainedElement="_AknRVzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRWjoZEeCmpu-HRutBsg" annotatedElement="_AknRWToZEeCmpu-HRutBsg">
        <body>The multiplicity of the qualifier value input pin is &quot;1..1&quot;.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRWzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>self.value.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRXDoZEeCmpu-HRutBsg" name="type_of_qualifier" constrainedElement="_AknRVzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRXToZEeCmpu-HRutBsg" annotatedElement="_AknRXDoZEeCmpu-HRutBsg">
        <body>The type of the qualifier value input pin is the same as the type of the qualifier attribute.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRXjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>value.type = qualifier.type</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRXzoZEeCmpu-HRutBsg" name="qualifier_attribute" constrainedElement="_AknRVzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRYDoZEeCmpu-HRutBsg" annotatedElement="_AknRXzoZEeCmpu-HRutBsg">
        <body>The qualifier attribute must be a qualifier of the association end of the link-end data.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRYToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>linkEndData.end->collect(qualifier)->includes(qualifier)</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknRYjoZEeCmpu-HRutBsg">
      <general xmi:type="uml:Class" href="CommonStructure.fragment.xmi#_D3IzLjoZEeCmpu-HRutBsg"/>
    </generalization>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRYzoZEeCmpu-HRutBsg" name="qualifier" visibility="public" association="_AkwaujoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRZDoZEeCmpu-HRutBsg" annotatedElement="_AknRYzoZEeCmpu-HRutBsg">
        <body>Attribute representing the qualifier for which the value is to be specified.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Classification.fragment.xmi#_CH192ToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRZToZEeCmpu-HRutBsg" name="value" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" association="_AkwavjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRZjoZEeCmpu-HRutBsg" annotatedElement="_AknRZToZEeCmpu-HRutBsg">
        <body>Input pin from which the specified value for the qualifier is taken.</body>
      </ownedComment>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknRZzoZEeCmpu-HRutBsg" name="RaiseExceptionAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknRaDoZEeCmpu-HRutBsg" annotatedElement="_AknRZzoZEeCmpu-HRutBsg">
      <body>A raise exception action is an action that causes an exception to occur. The input value becomes the exception object.</body>
    </ownedComment>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknRaToZEeCmpu-HRutBsg" general="_AkdfaDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRajoZEeCmpu-HRutBsg" name="exception" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwatzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRazoZEeCmpu-HRutBsg" annotatedElement="_AknRajoZEeCmpu-HRutBsg">
        <body>An input pin whose value becomes an exception object.</body>
      </ownedComment>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknRbDoZEeCmpu-HRutBsg" name="ReadExtentAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknRbToZEeCmpu-HRutBsg" annotatedElement="_AknRbDoZEeCmpu-HRutBsg">
      <body>A read extent action is an action that retrieves the current instances of a classifier.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRbjoZEeCmpu-HRutBsg" name="type_is_classifier" constrainedElement="_AknRbDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRbzoZEeCmpu-HRutBsg" annotatedElement="_AknRbjoZEeCmpu-HRutBsg">
        <body>The type of the result output pin is the classifier.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRcDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRcToZEeCmpu-HRutBsg" name="multiplicity_of_result" constrainedElement="_AknRbDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRcjoZEeCmpu-HRutBsg" annotatedElement="_AknRcToZEeCmpu-HRutBsg">
        <body>The multiplicity of the result output pin is 0..*.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRczoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknRdDoZEeCmpu-HRutBsg" general="_AkdfaDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRdToZEeCmpu-HRutBsg" name="classifier" visibility="public" association="_AkwatDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRdjoZEeCmpu-HRutBsg" annotatedElement="_AknRdToZEeCmpu-HRutBsg">
        <body>The classifier whose instances are to be retrieved.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Classification.fragment.xmi#_CHsOcDoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRdzoZEeCmpu-HRutBsg" name="result" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdffzoZEeCmpu-HRutBsg" association="_AkwasToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknReDoZEeCmpu-HRutBsg" annotatedElement="_AknRdzoZEeCmpu-HRutBsg">
        <body>The runtime instances of the classifier.</body>
      </ownedComment>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknReToZEeCmpu-HRutBsg" name="ReadIsClassifiedObjectAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknRejoZEeCmpu-HRutBsg" annotatedElement="_AknReToZEeCmpu-HRutBsg">
      <body>A read is classified object action is an action that determines whether a runtime object is classified by a given classifier.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRezoZEeCmpu-HRutBsg" name="no_type" constrainedElement="_AknReToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRfDoZEeCmpu-HRutBsg" annotatedElement="_AknRezoZEeCmpu-HRutBsg">
        <body>The input pin has no type.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRfToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>object.type = null</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRfjoZEeCmpu-HRutBsg" name="multiplicity_of_output" constrainedElement="_AknReToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRfzoZEeCmpu-HRutBsg" annotatedElement="_AknRfjoZEeCmpu-HRutBsg">
        <body>The multiplicity of the output pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRgDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>result.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRgToZEeCmpu-HRutBsg" name="boolean_result" constrainedElement="_AknReToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRgjoZEeCmpu-HRutBsg" annotatedElement="_AknRgToZEeCmpu-HRutBsg">
        <body>The type of the output pin is Boolean</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRgzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>result.type = Boolean</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRhDoZEeCmpu-HRutBsg" name="multiplicity_of_input" constrainedElement="_AknReToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRhToZEeCmpu-HRutBsg" annotatedElement="_AknRhDoZEeCmpu-HRutBsg">
        <body>The multiplicity of the input pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRhjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>object.is(1,1)</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknRhzoZEeCmpu-HRutBsg" general="_AkdfaDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRiDoZEeCmpu-HRutBsg" name="classifier" visibility="public" association="_AkwapzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRiToZEeCmpu-HRutBsg" annotatedElement="_AknRiDoZEeCmpu-HRutBsg">
        <body>The classifier against which the classification of the input object is tested.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Classification.fragment.xmi#_CHsOcDoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRijoZEeCmpu-HRutBsg" name="isDirect" visibility="public">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRizoZEeCmpu-HRutBsg" annotatedElement="_AknRijoZEeCmpu-HRutBsg">
        <body>Indicates whether the classifier must directly classify the input object.</body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="PrimitiveTypes.xmi#_PSic1ToZEeCmpu-HRutBsg"/>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_AknRjDoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRjToZEeCmpu-HRutBsg" name="object" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwarjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRjjoZEeCmpu-HRutBsg" annotatedElement="_AknRjToZEeCmpu-HRutBsg">
        <body>Holds the object whose classification is to be tested.</body>
      </ownedComment>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRjzoZEeCmpu-HRutBsg" name="result" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdffzoZEeCmpu-HRutBsg" association="_AkwaqzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRkDoZEeCmpu-HRutBsg" annotatedElement="_AknRjzoZEeCmpu-HRutBsg">
        <body>After termination of the action, will hold the result of the test.</body>
      </ownedComment>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknRkToZEeCmpu-HRutBsg" name="ReadLinkAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknRkjoZEeCmpu-HRutBsg" annotatedElement="_AknRkToZEeCmpu-HRutBsg">
      <body>A read link action is a link action that navigates across associations to retrieve objects on one end.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRkzoZEeCmpu-HRutBsg" name="type_and_ordering" constrainedElement="_AknRkToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRlDoZEeCmpu-HRutBsg" annotatedElement="_AknRkzoZEeCmpu-HRutBsg">
        <body>The type and ordering of the result output pin are same as the type and ordering of the open association end.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRlToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>let openEnd : Property = endData->select(value=null)->asSequence()->first().end in&#xA;  result.type = openEnd.type&#xA;  and result.isOrdered = openEnd.isOrdered&#xA;</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRljoZEeCmpu-HRutBsg" name="compatible_multiplicity" constrainedElement="_AknRkToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRlzoZEeCmpu-HRutBsg" annotatedElement="_AknRljoZEeCmpu-HRutBsg">
        <body>The multiplicity of the open association end must be compatible with the multiplicity of the result output pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRmDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>let openEnd : Property = endData->select(value=null)->asSequence()->first().end in&#xA;  openEnd.compatibleWith(result)&#xA;</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRmToZEeCmpu-HRutBsg" name="visibility" constrainedElement="_AknRkToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRmjoZEeCmpu-HRutBsg" annotatedElement="_AknRmToZEeCmpu-HRutBsg">
        <body>Visibility of the open end must allow access to the object performing the action.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRmzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>let host : Classifier = _'context' in&#xA;  let openEnd : Property = endData->select(value = null)->asSequence()->first().end in&#xA;    openEnd.visibility = VisibilityKind::public&#xA;    or endData->exists(oed | not (oed.end = openEnd)&#xA;      and (host = oed.end.type&#xA;      or (openEnd.visibility = VisibilityKind::protected&#xA;      and host.allParents()->includes(oed.end.type.oclAsType(Classifier)))))&#xA;</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRnDoZEeCmpu-HRutBsg" name="one_open_end" constrainedElement="_AknRkToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRnToZEeCmpu-HRutBsg" annotatedElement="_AknRnDoZEeCmpu-HRutBsg">
        <body>Exactly one link-end data specification (the 'open' end) must not have an end object input pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRnjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>self.endData->select(value=null )->size() = 1</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRnzoZEeCmpu-HRutBsg" name="navigable_open_end" constrainedElement="_AknRkToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRoDoZEeCmpu-HRutBsg" annotatedElement="_AknRnzoZEeCmpu-HRutBsg">
        <body>The open end must be navigable.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRoToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>let openEnd : Property = endData->select(value=null)->asSequence()->first().end in&#xA;  openEnd.isNavigable()&#xA;</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknRojoZEeCmpu-HRutBsg" general="_AknQszoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRozoZEeCmpu-HRutBsg" name="result" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdffzoZEeCmpu-HRutBsg" association="_AkwapDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRpDoZEeCmpu-HRutBsg" annotatedElement="_AknRozoZEeCmpu-HRutBsg">
        <body>The pin on which are put the objects participating in the association at the end not specified by the inputs.</body>
      </ownedComment>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknRpToZEeCmpu-HRutBsg" name="ReadLinkObjectEndAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknRpjoZEeCmpu-HRutBsg" annotatedElement="_AknRpToZEeCmpu-HRutBsg">
      <body>A read link object end action is an action that retrieves an end object from a link object.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRpzoZEeCmpu-HRutBsg" name="property" constrainedElement="_AknRpToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRqDoZEeCmpu-HRutBsg" annotatedElement="_AknRpzoZEeCmpu-HRutBsg">
        <body>The property must be an association end.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRqToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>end.association &lt;> null</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRqjoZEeCmpu-HRutBsg" name="multiplicity_of_object" constrainedElement="_AknRpToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRqzoZEeCmpu-HRutBsg" annotatedElement="_AknRqjoZEeCmpu-HRutBsg">
        <body>The multiplicity of the object input pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRrDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>object.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRrToZEeCmpu-HRutBsg" name="ends_of_association" constrainedElement="_AknRpToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRrjoZEeCmpu-HRutBsg" annotatedElement="_AknRrToZEeCmpu-HRutBsg">
        <body>The ends of the association must not be static.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRrzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>end.association.memberEnd->forAll(e | not e.isStatic)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRsDoZEeCmpu-HRutBsg" name="type_of_result" constrainedElement="_AknRpToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRsToZEeCmpu-HRutBsg" annotatedElement="_AknRsDoZEeCmpu-HRutBsg">
        <body>The type of the result output pin is the same as the type of the association end.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRsjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>result.type = end.type</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRszoZEeCmpu-HRutBsg" name="multiplicity_of_result" constrainedElement="_AknRpToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRtDoZEeCmpu-HRutBsg" annotatedElement="_AknRszoZEeCmpu-HRutBsg">
        <body>The multiplicity of the result output pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRtToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>result.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRtjoZEeCmpu-HRutBsg" name="type_of_object" constrainedElement="_AknRpToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRtzoZEeCmpu-HRutBsg" annotatedElement="_AknRtjoZEeCmpu-HRutBsg">
        <body>The type of the object input pin is the association class that owns the association end.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRuDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>object.type = end.association</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRuToZEeCmpu-HRutBsg" name="association_of_association" constrainedElement="_AknRpToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRujoZEeCmpu-HRutBsg" annotatedElement="_AknRuToZEeCmpu-HRutBsg">
        <body>The association of the association end must be an association class.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRuzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>end.association.oclIsKindOf(AssociationClass)</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknRvDoZEeCmpu-HRutBsg" general="_AkdfaDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRvToZEeCmpu-HRutBsg" name="end" visibility="public" association="_AkwanjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRvjoZEeCmpu-HRutBsg" annotatedElement="_AknRvToZEeCmpu-HRutBsg">
        <body>Link end to be read.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Classification.fragment.xmi#_CH192ToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRvzoZEeCmpu-HRutBsg" name="object" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwamzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRwDoZEeCmpu-HRutBsg" annotatedElement="_AknRvzoZEeCmpu-HRutBsg">
        <body>Gives the input pin from which the link object is obtained.</body>
      </ownedComment>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknRwToZEeCmpu-HRutBsg" name="result" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdffzoZEeCmpu-HRutBsg" association="_AkwaoToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRwjoZEeCmpu-HRutBsg" annotatedElement="_AknRwToZEeCmpu-HRutBsg">
        <body>Pin where the result value is placed.</body>
      </ownedComment>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknRwzoZEeCmpu-HRutBsg" name="ReadLinkObjectEndQualifierAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknRxDoZEeCmpu-HRutBsg" annotatedElement="_AknRwzoZEeCmpu-HRutBsg">
      <body>A read link object end qualifier action is an action that retrieves a qualifier end value from a link object.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRxToZEeCmpu-HRutBsg" name="multiplicity_of_object" constrainedElement="_AknRwzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRxjoZEeCmpu-HRutBsg" annotatedElement="_AknRxToZEeCmpu-HRutBsg">
        <body>The multiplicity of the object input pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRxzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>object.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRyDoZEeCmpu-HRutBsg" name="type_of_object" constrainedElement="_AknRwzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRyToZEeCmpu-HRutBsg" annotatedElement="_AknRyDoZEeCmpu-HRutBsg">
        <body>The type of the object input pin is the association class that owns the association end that has the given qualifier attribute.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRyjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>object.type = qualifier.associationEnd.association</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRyzoZEeCmpu-HRutBsg" name="multiplicity_of_qualifier" constrainedElement="_AknRwzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRzDoZEeCmpu-HRutBsg" annotatedElement="_AknRyzoZEeCmpu-HRutBsg">
        <body>The multiplicity of the qualifier attribute is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknRzToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>qualifier.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknRzjoZEeCmpu-HRutBsg" name="ends_of_association" constrainedElement="_AknRwzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknRzzoZEeCmpu-HRutBsg" annotatedElement="_AknRzjoZEeCmpu-HRutBsg">
        <body>The ends of the association must not be static.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknR0DoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>qualifier.associationEnd.association.memberEnd->forAll(e | not e.isStatic)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknR0ToZEeCmpu-HRutBsg" name="multiplicity_of_result" constrainedElement="_AknRwzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknR0joZEeCmpu-HRutBsg" annotatedElement="_AknR0ToZEeCmpu-HRutBsg">
        <body>The multiplicity of the result output pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknR0zoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>result.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknR1DoZEeCmpu-HRutBsg" name="same_type" constrainedElement="_AknRwzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknR1ToZEeCmpu-HRutBsg" annotatedElement="_AknR1DoZEeCmpu-HRutBsg">
        <body>The type of the result output pin is the same as the type of the qualifier attribute.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknR1joZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>result.type = qualifier.type</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknR1zoZEeCmpu-HRutBsg" name="association_of_association" constrainedElement="_AknRwzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknR2DoZEeCmpu-HRutBsg" annotatedElement="_AknR1zoZEeCmpu-HRutBsg">
        <body>The association of the association end of the qualifier attribute must be an association class.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknR2ToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>qualifier.associationEnd.association.oclIsKindOf(AssociationClass)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknR2joZEeCmpu-HRutBsg" name="qualifier_attribute" constrainedElement="_AknRwzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknR2zoZEeCmpu-HRutBsg" annotatedElement="_AknR2joZEeCmpu-HRutBsg">
        <body>The qualifier attribute must be a qualifier attribute of an association end.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknR3DoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>qualifier.associationEnd &lt;> null</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknR3ToZEeCmpu-HRutBsg" general="_AkdfaDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknR3joZEeCmpu-HRutBsg" name="object" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwalToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknR3zoZEeCmpu-HRutBsg" annotatedElement="_AknR3joZEeCmpu-HRutBsg">
        <body>Gives the input pin from which the link object is obtained.</body>
      </ownedComment>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknR4DoZEeCmpu-HRutBsg" name="qualifier" visibility="public" association="_AkwakjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknR4ToZEeCmpu-HRutBsg" annotatedElement="_AknR4DoZEeCmpu-HRutBsg">
        <body>The attribute representing the qualifier to be read.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Classification.fragment.xmi#_CH192ToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknR4joZEeCmpu-HRutBsg" name="result" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdffzoZEeCmpu-HRutBsg" association="_AkwamDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknR4zoZEeCmpu-HRutBsg" annotatedElement="_AknR4joZEeCmpu-HRutBsg">
        <body>Pin where the result value is placed.</body>
      </ownedComment>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknR5DoZEeCmpu-HRutBsg" name="ReadSelfAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknR5ToZEeCmpu-HRutBsg" annotatedElement="_AknR5DoZEeCmpu-HRutBsg">
      <body>A read self action is an action that retrieves the host object of an action.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknR5joZEeCmpu-HRutBsg" name="contained" constrainedElement="_AknR5DoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknR5zoZEeCmpu-HRutBsg" annotatedElement="_AknR5joZEeCmpu-HRutBsg">
        <body>The action must be contained in an behavior that has a host classifier.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknR6DoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>_'context' &lt;> null</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknR6ToZEeCmpu-HRutBsg" name="multiplicity" constrainedElement="_AknR5DoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknR6joZEeCmpu-HRutBsg" annotatedElement="_AknR6ToZEeCmpu-HRutBsg">
        <body>The multiplicity of the result output pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknR6zoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>result.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknR7DoZEeCmpu-HRutBsg" name="not_static" constrainedElement="_AknR5DoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknR7ToZEeCmpu-HRutBsg" annotatedElement="_AknR7DoZEeCmpu-HRutBsg">
        <body>If the action is contained in an behavior that is acting as the body of a method, then the operation of the method must not be static.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknR7joZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknR7zoZEeCmpu-HRutBsg" name="type" constrainedElement="_AknR5DoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknR8DoZEeCmpu-HRutBsg" annotatedElement="_AknR7zoZEeCmpu-HRutBsg">
        <body>The type of the result output pin is the host classifier.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknR8ToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>result.type = _'context'</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknR8joZEeCmpu-HRutBsg" general="_AkdfaDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknR8zoZEeCmpu-HRutBsg" name="result" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdffzoZEeCmpu-HRutBsg" association="_AkwajzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknR9DoZEeCmpu-HRutBsg" annotatedElement="_AknR8zoZEeCmpu-HRutBsg">
        <body>Gives the output pin on which the hosting object is placed.</body>
      </ownedComment>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknR9ToZEeCmpu-HRutBsg" name="ReadStructuralFeatureAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknR9joZEeCmpu-HRutBsg" annotatedElement="_AknR9ToZEeCmpu-HRutBsg">
      <body>A read structural feature action is a structural feature action that retrieves the values of a structural feature.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknR9zoZEeCmpu-HRutBsg" name="multiplicity" constrainedElement="_AknR9ToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknR-DoZEeCmpu-HRutBsg" annotatedElement="_AknR9zoZEeCmpu-HRutBsg">
        <body>The multiplicity of the structural feature must be compatible with the multiplicity of the output pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknR-ToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>structuralFeature.compatibleWith(result)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknR-joZEeCmpu-HRutBsg" name="type_and_ordering" constrainedElement="_AknR9ToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknR-zoZEeCmpu-HRutBsg" annotatedElement="_AknR-joZEeCmpu-HRutBsg">
        <body>The type and ordering of the result output pin are the same as the type and ordering of the structural feature.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknR_DoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>result.type =structuralFeature.type&#xA;and result.isOrdered = structuralFeature.isOrdered&#xA;</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknR_ToZEeCmpu-HRutBsg" general="_AkwZrzoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknR_joZEeCmpu-HRutBsg" name="result" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdffzoZEeCmpu-HRutBsg" association="_AkwajDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknR_zoZEeCmpu-HRutBsg" annotatedElement="_AknR_joZEeCmpu-HRutBsg">
        <body>Gives the output pin on which the result is put.</body>
      </ownedComment>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknSADoZEeCmpu-HRutBsg" name="ReadVariableAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknSAToZEeCmpu-HRutBsg" annotatedElement="_AknSADoZEeCmpu-HRutBsg">
      <body>A read variable action is a variable action that retrieves the values of a variable.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknSAjoZEeCmpu-HRutBsg" name="type_and_ordering" constrainedElement="_AknSADoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSAzoZEeCmpu-HRutBsg" annotatedElement="_AknSAjoZEeCmpu-HRutBsg">
        <body>The type and ordering of the result output pin of a read-variable action are the same as the type and ordering of the variable.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknSBDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>result.type =variable.type&#xA;and result.isOrdered = variable.isOrdered&#xA;</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknSBToZEeCmpu-HRutBsg" name="compatible_multiplicity" constrainedElement="_AknSADoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSBjoZEeCmpu-HRutBsg" annotatedElement="_AknSBToZEeCmpu-HRutBsg">
        <body>The multiplicity of the variable must be compatible with the multiplicity of the output pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknSBzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>variable.compatibleWith(result)</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknSCDoZEeCmpu-HRutBsg" general="_AkdfCjoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknSCToZEeCmpu-HRutBsg" name="result" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdffzoZEeCmpu-HRutBsg" association="_AkwaiToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSCjoZEeCmpu-HRutBsg" annotatedElement="_AknSCToZEeCmpu-HRutBsg">
        <body>Gives the output pin on which the result is put.</body>
      </ownedComment>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknSCzoZEeCmpu-HRutBsg" name="ReclassifyObjectAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknSDDoZEeCmpu-HRutBsg" annotatedElement="_AknSCzoZEeCmpu-HRutBsg">
      <body>A reclassify object action is an action that changes which classifiers classify an object.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknSDToZEeCmpu-HRutBsg" name="input_pin" constrainedElement="_AknSCzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSDjoZEeCmpu-HRutBsg" annotatedElement="_AknSDToZEeCmpu-HRutBsg">
        <body>The input pin has no type.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknSDzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>object.type = null</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknSEDoZEeCmpu-HRutBsg" name="classifier_not_abstract" constrainedElement="_AknSCzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSEToZEeCmpu-HRutBsg" annotatedElement="_AknSEDoZEeCmpu-HRutBsg">
        <body>None of the new classifiers may be abstract.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknSEjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>not newClassifier->exists(isAbstract)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknSEzoZEeCmpu-HRutBsg" name="multiplicity" constrainedElement="_AknSCzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSFDoZEeCmpu-HRutBsg" annotatedElement="_AknSEzoZEeCmpu-HRutBsg">
        <body>The multiplicity of the input pin is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknSFToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>object.is(1,1)</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknSFjoZEeCmpu-HRutBsg" general="_AkdfaDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknSFzoZEeCmpu-HRutBsg" name="isReplaceAll" visibility="public">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSGDoZEeCmpu-HRutBsg" annotatedElement="_AknSFzoZEeCmpu-HRutBsg">
        <body>Specifies whether existing classifiers should be removed before adding the new classifiers.</body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="PrimitiveTypes.xmi#_PSic1ToZEeCmpu-HRutBsg"/>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_AknSGToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknSGjoZEeCmpu-HRutBsg" name="newClassifier" visibility="public" association="_AkwagToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSGzoZEeCmpu-HRutBsg" annotatedElement="_AknSGjoZEeCmpu-HRutBsg">
        <body>A set of classifiers to be added to the classifiers of the object.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Classification.fragment.xmi#_CHsOcDoZEeCmpu-HRutBsg"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknSHDoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknSHToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknSHjoZEeCmpu-HRutBsg" name="object" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwafjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSHzoZEeCmpu-HRutBsg" annotatedElement="_AknSHjoZEeCmpu-HRutBsg">
        <body>Holds the object to be reclassified.</body>
      </ownedComment>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknSIDoZEeCmpu-HRutBsg" name="oldClassifier" visibility="public" association="_AkwahToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSIToZEeCmpu-HRutBsg" annotatedElement="_AknSIDoZEeCmpu-HRutBsg">
        <body>A set of classifiers to be removed from the classifiers of the object.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Classification.fragment.xmi#_CHsOcDoZEeCmpu-HRutBsg"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknSIjoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknSIzoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknSJDoZEeCmpu-HRutBsg" name="ReduceAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknSJToZEeCmpu-HRutBsg" annotatedElement="_AknSJDoZEeCmpu-HRutBsg">
      <body>A reduce action is an action that reduces a collection to a single value by combining the elements of the collection.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknSJjoZEeCmpu-HRutBsg" name="reducer_inputs_output" constrainedElement="_AknSJDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSJzoZEeCmpu-HRutBsg" annotatedElement="_AknSJjoZEeCmpu-HRutBsg">
        <body>The reducer behavior must have two input parameters and one output parameter, of types compatible with the types of elements of the input collection.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknSKDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknSKToZEeCmpu-HRutBsg" name="input_type_is_collection" constrainedElement="_AknSJDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSKjoZEeCmpu-HRutBsg" annotatedElement="_AknSKToZEeCmpu-HRutBsg">
        <body>The type of the input must be a collection.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknSKzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknSLDoZEeCmpu-HRutBsg" name="output_types_are_compatible" constrainedElement="_AknSJDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSLToZEeCmpu-HRutBsg" annotatedElement="_AknSLDoZEeCmpu-HRutBsg">
        <body>The type of the output must be compatible with the type of the output of the reducer behavior.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknSLjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknSLzoZEeCmpu-HRutBsg" general="_AkdfaDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknSMDoZEeCmpu-HRutBsg" name="collection" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwadDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSMToZEeCmpu-HRutBsg" annotatedElement="_AknSMDoZEeCmpu-HRutBsg">
        <body>The collection to be reduced.</body>
      </ownedComment>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknSMjoZEeCmpu-HRutBsg" name="isOrdered" visibility="public">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSMzoZEeCmpu-HRutBsg" annotatedElement="_AknSMjoZEeCmpu-HRutBsg">
        <body>Tells whether the order of the input collection should determine the order in which the behavior is applied to its elements.</body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="PrimitiveTypes.xmi#_PSic1ToZEeCmpu-HRutBsg"/>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_AknSNDoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknSNToZEeCmpu-HRutBsg" name="reducer" visibility="public" association="_AkwadzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSNjoZEeCmpu-HRutBsg" annotatedElement="_AknSNToZEeCmpu-HRutBsg">
        <body>Behavior that is applied to two elements of the input collection to produce a value that is the same type as elements of the collection.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="CommonBehavior.fragment.xmi#_DF0rXzoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknSNzoZEeCmpu-HRutBsg" name="result" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdffzoZEeCmpu-HRutBsg" association="_AkwaezoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSODoZEeCmpu-HRutBsg" annotatedElement="_AknSNzoZEeCmpu-HRutBsg">
        <body>Gives the output pin on which the result is put.</body>
      </ownedComment>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknSOToZEeCmpu-HRutBsg" name="RemoveStructuralFeatureValueAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknSOjoZEeCmpu-HRutBsg" annotatedElement="_AknSOToZEeCmpu-HRutBsg">
      <body>A remove structural feature value action is a write structural feature action that removes values from structural features.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknSOzoZEeCmpu-HRutBsg" name="non_unique_removal" constrainedElement="_AknSOToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSPDoZEeCmpu-HRutBsg" annotatedElement="_AknSOzoZEeCmpu-HRutBsg">
        <body>Actions removing a value from ordered non-unique structural features must have a single removeAt input pin and no value input pin if isRemoveDuplicates is false. The removeAt pin must be of type Unlimited Natural with multiplicity 1..1. Otherwise, the action has a value input pin and no removeAt input pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknSPToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>if not structuralFeature.isOrdered or structuralFeature.isUnique or  isRemoveDuplicates then&#xD;&#xA;  self.removeAt = null and self.value &lt;> null&#xD;&#xA;else&#xD;&#xA;  self.value = null and&#xD;&#xA;  self.removeAt &lt;> null and&#xD;&#xA;  self.removeAt.type = UnlimitedNatural and&#xD;&#xA;  self.removeAt.is(1,1)&#xD;&#xA;endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknSPjoZEeCmpu-HRutBsg" general="_AkdfGDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknSPzoZEeCmpu-HRutBsg" name="isRemoveDuplicates" visibility="public">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSQDoZEeCmpu-HRutBsg" annotatedElement="_AknSPzoZEeCmpu-HRutBsg">
        <body>Specifies whether to remove duplicates of the value in nonunique structural features.</body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="PrimitiveTypes.xmi#_PSic1ToZEeCmpu-HRutBsg"/>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_AknSQToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknSQjoZEeCmpu-HRutBsg" name="removeAt" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwacToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSQzoZEeCmpu-HRutBsg" annotatedElement="_AknSQjoZEeCmpu-HRutBsg">
        <body>Specifies the position of an existing value to remove in ordered nonunique structural features. The type of the pin is UnlimitedNatural, but the value cannot be zero or unlimited.</body>
      </ownedComment>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknSRDoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknSRToZEeCmpu-HRutBsg" name="RemoveVariableValueAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknSRjoZEeCmpu-HRutBsg" annotatedElement="_AknSRToZEeCmpu-HRutBsg">
      <body>A remove variable value action is a write variable action that removes values from variables.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknSRzoZEeCmpu-HRutBsg" name="unlimited_natural" constrainedElement="_AknSRToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSSDoZEeCmpu-HRutBsg" annotatedElement="_AknSRzoZEeCmpu-HRutBsg">
        <body>Actions removing a value from ordered non-unique variables must have a single removeAt input pin and no value input pin if isRemoveDuplicates is false. The removeAt pin must be of type Unlimited Natural with multiplicity 1..1. Otherwise, the action has a value input pin and no removeAt input pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknSSToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>if not variable.isOrdered or variable.isUnique or isRemoveDuplicates then &#xD;&#xA;  self.removeAt = null and self.value &lt;> null&#xD;&#xA;else&#xD;&#xA;  self.value = null and&#xD;&#xA;  self.removeAt &lt;> null and&#xD;&#xA;  self.removeAt.type = UnlimitedNatural and&#xD;&#xA;  self.removeAt.is(1,1)&#xD;&#xA;endif</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknSSjoZEeCmpu-HRutBsg" general="_AkdfLToZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknSSzoZEeCmpu-HRutBsg" name="isRemoveDuplicates" visibility="public">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSTDoZEeCmpu-HRutBsg" annotatedElement="_AknSSzoZEeCmpu-HRutBsg">
        <body>Specifies whether to remove duplicates of the value in nonunique variables.</body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="PrimitiveTypes.xmi#_PSic1ToZEeCmpu-HRutBsg"/>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_AknSTToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknSTjoZEeCmpu-HRutBsg" name="removeAt" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwabjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSTzoZEeCmpu-HRutBsg" annotatedElement="_AknSTjoZEeCmpu-HRutBsg">
        <body>Specifies the position of an existing value to remove in ordered nonunique variables. The type of the pin is UnlimitedNatural, but the value cannot be zero or unlimited.</body>
      </ownedComment>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknSUDoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknSUToZEeCmpu-HRutBsg" name="ReplyAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknSUjoZEeCmpu-HRutBsg" annotatedElement="_AknSUToZEeCmpu-HRutBsg">
      <body>A reply action is an action that accepts a set of return values and a value containing return information produced by a previous accept call action. The reply action returns the values to the caller of the previous call, completing execution of the call.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknSUzoZEeCmpu-HRutBsg" name="pins_match_parameter" constrainedElement="_AknSUToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSVDoZEeCmpu-HRutBsg" annotatedElement="_AknSUzoZEeCmpu-HRutBsg">
        <body>The reply value pins must match the return, out, and inout parameters of the operation on the event on the trigger in number, type, and order.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknSVToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknSVjoZEeCmpu-HRutBsg" name="event_on_reply_to_call_trigger" constrainedElement="_AknSUToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSVzoZEeCmpu-HRutBsg" annotatedElement="_AknSVjoZEeCmpu-HRutBsg">
        <body>The event on replyToCall trigger must be a CallEvent replyToCallEvent.oclIsKindOf(CallEvent)</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknSWDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>replyToCall.event.oclIsKindOf(CallEvent)</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknSWToZEeCmpu-HRutBsg" general="_AkdfaDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknSWjoZEeCmpu-HRutBsg" name="replyToCall" visibility="public" association="_AkwaaDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSWzoZEeCmpu-HRutBsg" annotatedElement="_AknSWjoZEeCmpu-HRutBsg">
        <body>The trigger specifying the operation whose call is being replied to.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="CommonBehavior.fragment.xmi#_DF-ZgToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknSXDoZEeCmpu-HRutBsg" name="replyValue" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwaazoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSXToZEeCmpu-HRutBsg" annotatedElement="_AknSXDoZEeCmpu-HRutBsg">
        <body>A list of pins containing the reply values of the operation. These values are returned to the caller.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknSXjoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknSXzoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknSYDoZEeCmpu-HRutBsg" name="returnInformation" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwaZToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSYToZEeCmpu-HRutBsg" annotatedElement="_AknSYDoZEeCmpu-HRutBsg">
        <body>A pin containing the return information value produced by an earlier AcceptCallAction.</body>
      </ownedComment>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknSYjoZEeCmpu-HRutBsg" name="SendObjectAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknSYzoZEeCmpu-HRutBsg" annotatedElement="_AknSYjoZEeCmpu-HRutBsg">
      <body>A send object action is an action that transmits an object to the target object, where it may invoke behavior such as the firing of state machine transitions or the execution of an activity. The value of the object is available to the execution of invoked behaviors. The requestor continues execution immediately. Any reply message is ignored and is not transmitted to the requestor.</body>
    </ownedComment>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknSZDoZEeCmpu-HRutBsg" general="_AknQpToZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknSZToZEeCmpu-HRutBsg" name="request" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" redefinedProperty="_AknQrDoZEeCmpu-HRutBsg" association="_AkwaXjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSZjoZEeCmpu-HRutBsg" annotatedElement="_AknSZToZEeCmpu-HRutBsg">
        <body>The request object, which is transmitted to the target object. The object may be copied in transmission, so identity might not be preserved.</body>
      </ownedComment>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknSZzoZEeCmpu-HRutBsg" name="target" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwaYjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSaDoZEeCmpu-HRutBsg" annotatedElement="_AknSZzoZEeCmpu-HRutBsg">
        <body>The target object to which the object is sent.</body>
      </ownedComment>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknSaToZEeCmpu-HRutBsg" name="SendSignalAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknSajoZEeCmpu-HRutBsg" annotatedElement="_AknSaToZEeCmpu-HRutBsg">
      <body>A send signal action is an action that creates a signal instance from its inputs, and transmits it to the target object, where it may cause the firing of a state machine transition or the execution of an activity. The argument values are available to the execution of associated behaviors. The requestor continues execution immediately. Any reply message is ignored and is not transmitted to the requestor. If the input is already a signal instance, use a send object action.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknSazoZEeCmpu-HRutBsg" name="type_ordering_multiplicity" constrainedElement="_AknSaToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSbDoZEeCmpu-HRutBsg" annotatedElement="_AknSazoZEeCmpu-HRutBsg">
        <body>The type, ordering, and multiplicity of an argument pin must be the same as the corresponding attribute of the signal.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknSbToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AknSbjoZEeCmpu-HRutBsg" name="number_order" constrainedElement="_AknSaToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSbzoZEeCmpu-HRutBsg" annotatedElement="_AknSbjoZEeCmpu-HRutBsg">
        <body>The number and order of argument pins must be the same as the number and order of attributes in the signal.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AknScDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknScToZEeCmpu-HRutBsg" general="_AknQpToZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknScjoZEeCmpu-HRutBsg" name="signal" visibility="public" association="_AkwaVzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSczoZEeCmpu-HRutBsg" annotatedElement="_AknScjoZEeCmpu-HRutBsg">
        <body>The type of signal transmitted to the target object.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="SimpleClassifiers.fragment.xmi#_JBTwqToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknSdDoZEeCmpu-HRutBsg" name="target" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwaWzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSdToZEeCmpu-HRutBsg" annotatedElement="_AknSdDoZEeCmpu-HRutBsg">
        <body>The target object to which the signal is sent.</body>
      </ownedComment>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AknSdjoZEeCmpu-HRutBsg" name="SequenceNode">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AknSdzoZEeCmpu-HRutBsg" annotatedElement="_AknSdjoZEeCmpu-HRutBsg">
      <body>A sequence node is a structured activity node that executes its actions in order.</body>
    </ownedComment>
    <generalization xmi:type="uml:Generalization" xmi:id="_AknSeDoZEeCmpu-HRutBsg" general="_AkwZxToZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AknSeToZEeCmpu-HRutBsg" name="executableNode" visibility="public" isOrdered="true" aggregation="composite" redefinedProperty="_AkwZ3joZEeCmpu-HRutBsg" association="_AkwaVDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AknSejoZEeCmpu-HRutBsg" annotatedElement="_AknSeToZEeCmpu-HRutBsg">
        <body>An ordered set of executable nodes.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Activities.fragment.xmi#_BHeu8ToZEeCmpu-HRutBsg"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AknSezoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AknSfDoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AkwZkDoZEeCmpu-HRutBsg" name="StartClassifierBehaviorAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZkToZEeCmpu-HRutBsg" annotatedElement="_AkwZkDoZEeCmpu-HRutBsg">
      <body>A start classifier behavior action is an action that starts the classifier behavior of the input.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwZkjoZEeCmpu-HRutBsg" name="multiplicity" constrainedElement="_AkwZkDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZkzoZEeCmpu-HRutBsg" annotatedElement="_AkwZkjoZEeCmpu-HRutBsg">
        <body>The multiplicity of the input pin is 1..1</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwZlDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwZlToZEeCmpu-HRutBsg" name="type_has_classifier" constrainedElement="_AkwZkDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZljoZEeCmpu-HRutBsg" annotatedElement="_AkwZlToZEeCmpu-HRutBsg">
        <body>If the input pin has a type, then the type must have a classifier behavior.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwZlzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AkwZmDoZEeCmpu-HRutBsg" general="_AkdfaDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkwZmToZEeCmpu-HRutBsg" name="object" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwaUToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZmjoZEeCmpu-HRutBsg" annotatedElement="_AkwZmToZEeCmpu-HRutBsg">
        <body>Holds the object on which to start the owned behavior.</body>
      </ownedComment>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AkwZmzoZEeCmpu-HRutBsg" name="StartObjectBehaviorAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZnDoZEeCmpu-HRutBsg" annotatedElement="_AkwZmzoZEeCmpu-HRutBsg">
      <body>StartObjectBehaviorAction is an action that starts the execution either of a directly instantiated behavior or of the classifier behavior of an object. Argument values may be supplied for the input parameters of the behavior. If the behavior is invoked synchronously, then output values may be obtained for output parameters.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwZnToZEeCmpu-HRutBsg" name="number_order_results" constrainedElement="_AkwZmzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZnjoZEeCmpu-HRutBsg" annotatedElement="_AkwZnToZEeCmpu-HRutBsg">
        <body>The number and order of result pins must be the same as the number and order of the in-out, out and return parameters of the invoked behavior. Pins are matched to parameters by order.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwZnzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwZoDoZEeCmpu-HRutBsg" name="multiplicity_of_object" constrainedElement="_AkwZmzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZoToZEeCmpu-HRutBsg" annotatedElement="_AkwZoDoZEeCmpu-HRutBsg">
        <body>The multiplicity of the object input pin must be [1..1].</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwZojoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwZozoZEeCmpu-HRutBsg" name="type_ordering_multiplicity_match" constrainedElement="_AkwZmzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZpDoZEeCmpu-HRutBsg" annotatedElement="_AkwZozoZEeCmpu-HRutBsg">
        <body>The type, ordering, and multiplicity of an argument or result pin must be the same as the corresponding parameter of the behavior.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwZpToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwZpjoZEeCmpu-HRutBsg" name="number_order_arguments" constrainedElement="_AkwZmzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZpzoZEeCmpu-HRutBsg" annotatedElement="_AkwZpjoZEeCmpu-HRutBsg">
        <body>The number and order of the argument pins must be the same as the number and order of the in and in-out parameters of the invoked behavior. Pins are matched to parameters by order.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwZqDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwZqToZEeCmpu-HRutBsg" name="type_of_object" constrainedElement="_AkwZmzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZqjoZEeCmpu-HRutBsg" annotatedElement="_AkwZqToZEeCmpu-HRutBsg">
        <body>The type of the object input pin must be either a Behavior or a BehavioredClassifier with a classifier behavior.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwZqzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AkwZrDoZEeCmpu-HRutBsg" general="_AknPrToZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkwZrToZEeCmpu-HRutBsg" name="object" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwaTjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZrjoZEeCmpu-HRutBsg" annotatedElement="_AkwZrToZEeCmpu-HRutBsg">
        <body>Holds the object which is either a behavior to be started or has a classifier behavior to be started.</body>
      </ownedComment>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AkwZrzoZEeCmpu-HRutBsg" name="StructuralFeatureAction" isAbstract="true">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZsDoZEeCmpu-HRutBsg" annotatedElement="_AkwZrzoZEeCmpu-HRutBsg">
      <body>StructuralFeatureAction is an abstract class for all structural feature actions.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwZsToZEeCmpu-HRutBsg" name="multiplicity" constrainedElement="_AkwZrzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZsjoZEeCmpu-HRutBsg" annotatedElement="_AkwZsToZEeCmpu-HRutBsg">
        <body>The multiplicity of the object input pin must be 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwZszoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>object.is(1,1)</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwZtDoZEeCmpu-HRutBsg" name="same_type" constrainedElement="_AkwZrzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZtToZEeCmpu-HRutBsg" annotatedElement="_AkwZtDoZEeCmpu-HRutBsg">
        <body>The structural feature must either be owned by the type of the object input pin, or it must be an owned end of a binary association with the type of the opposite end being the type of the object input pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwZtjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>structuralFeature.featuringClassifier.oclAsType(Type)->includes(object.type) or&#xD;&#xA;&#x9;structuralFeature.oclAsType(Property).opposite.type = object.type</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwZtzoZEeCmpu-HRutBsg" name="visibility" constrainedElement="_AkwZrzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZuDoZEeCmpu-HRutBsg" annotatedElement="_AkwZtzoZEeCmpu-HRutBsg">
        <body>Visibility of structural feature must allow access to the object performing the action.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwZuToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>let host : Classifier = _'context' in&#xA;structuralFeature.visibility = VisibilityKind::public&#xA;or host = self.structuralFeature.featuringClassifier->asSequence()->first()&#xA;or (self.structuralFeature.visibility = VisibilityKind::protected and &#xA;  host.allParents()->includesAll(self.structuralFeature.featuringClassifier))&#xA;</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwZujoZEeCmpu-HRutBsg" name="not_static" constrainedElement="_AkwZrzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZuzoZEeCmpu-HRutBsg" annotatedElement="_AkwZujoZEeCmpu-HRutBsg">
        <body>The structural feature must not be static.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwZvDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>not structuralFeature.isStatic</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwZvToZEeCmpu-HRutBsg" name="one_featuring_classifier" constrainedElement="_AkwZrzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZvjoZEeCmpu-HRutBsg" annotatedElement="_AkwZvToZEeCmpu-HRutBsg">
        <body>A structural feature has exactly one featuringClassifier.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwZvzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>structuralFeature.featuringClassifier->size() = 1</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AkwZwDoZEeCmpu-HRutBsg" general="_AkdfaDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkwZwToZEeCmpu-HRutBsg" name="object" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwaRzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZwjoZEeCmpu-HRutBsg" annotatedElement="_AkwZwToZEeCmpu-HRutBsg">
        <body>Gives the input pin from which the object whose structural feature is to be read or written is obtained.</body>
      </ownedComment>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkwZwzoZEeCmpu-HRutBsg" name="structuralFeature" visibility="public" association="_AkwaSjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZxDoZEeCmpu-HRutBsg" annotatedElement="_AkwZwzoZEeCmpu-HRutBsg">
        <body>Structural feature to be read.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Classification.fragment.xmi#_CH1-vToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AkwZxToZEeCmpu-HRutBsg" name="StructuredActivityNode">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZxjoZEeCmpu-HRutBsg" annotatedElement="_AkwZxToZEeCmpu-HRutBsg">
      <body>Because of the concurrent nature of the execution of actions within and across activities, it can be difficult to guarantee the consistent access and modification of object memory. In order to avoid race conditions or other concurrency-related problems, it is sometimes necessary to isolate the effects of a group of actions from the effects of actions outside the group. This may be indicated by setting the mustIsolate attribute to true on a structured activity node. If a structured activity node is &quot;isolated,&quot; then any object used by an action within the node cannot be accessed by any action outside the node until the structured activity node as a whole completes. Any concurrent actions that would result in accessing such objects are required to have their execution deferred until the completion of the node.
A structured activity node is an executable activity node that may have an expansion into subordinate nodes as an activity group. The subordinate nodes must belong to only one structured activity node, although they may be nested.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwZyDoZEeCmpu-HRutBsg" name="output_pin_edges" constrainedElement="_AkwZxToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZyToZEeCmpu-HRutBsg" annotatedElement="_AkwZyDoZEeCmpu-HRutBsg">
        <body>The outgoing edges of the output pins of a StructuredActivityNode must have targets that are not within the StructuredActivityNode.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwZyjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwZyzoZEeCmpu-HRutBsg" name="edges" constrainedElement="_AkwZxToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZzDoZEeCmpu-HRutBsg" annotatedElement="_AkwZyzoZEeCmpu-HRutBsg">
        <body>The edges owned by a structured node must have source and target nodes in the structured node, and vice versa.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwZzToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwZzjoZEeCmpu-HRutBsg" name="input_pin_edges" constrainedElement="_AkwZxToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZzzoZEeCmpu-HRutBsg" annotatedElement="_AkwZzjoZEeCmpu-HRutBsg">
        <body>The incoming edges of the input pins of a StructuredActivityNode must have sources that are not within the StructuredActivityNode.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwZ0DoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AkwZ0ToZEeCmpu-HRutBsg">
      <general xmi:type="uml:Class" href="CommonStructure.fragment.xmi#_D3ShmjoZEeCmpu-HRutBsg"/>
    </generalization>
    <generalization xmi:type="uml:Generalization" xmi:id="_AkwZ0joZEeCmpu-HRutBsg">
      <general xmi:type="uml:Class" href="Activities.fragment.xmi#_BHeuIzoZEeCmpu-HRutBsg"/>
    </generalization>
    <generalization xmi:type="uml:Generalization" xmi:id="_AkwZ0zoZEeCmpu-HRutBsg" general="_AkdfaDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkwZ1DoZEeCmpu-HRutBsg" name="activity" visibility="public">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZ1ToZEeCmpu-HRutBsg" annotatedElement="_AkwZ1DoZEeCmpu-HRutBsg">
        <body>Activity immediately containing the node.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Activities.fragment.xmi#_BHetxToZEeCmpu-HRutBsg"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwZ1joZEeCmpu-HRutBsg"/>
      <redefinedProperty xmi:type="uml:Property" href="Activities.fragment.xmi#_BHeuNzoZEeCmpu-HRutBsg"/>
      <redefinedProperty xmi:type="uml:Property" href="Activities.fragment.xmi#_BHeuSjoZEeCmpu-HRutBsg"/>
      <association xmi:type="uml:Association" href="Activities.fragment.xmi#_BHn2YjoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkwZ1zoZEeCmpu-HRutBsg" name="edge" visibility="public" aggregation="composite" association="_AkwaRDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZ2DoZEeCmpu-HRutBsg" annotatedElement="_AkwZ1zoZEeCmpu-HRutBsg">
        <body>Edges immediately contained in the structured node.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Activities.fragment.xmi#_BHet9joZEeCmpu-HRutBsg"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkwZ2ToZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwZ2joZEeCmpu-HRutBsg"/>
      <subsettedProperty xmi:type="uml:Property" href="Activities.fragment.xmi#_BHeuLzoZEeCmpu-HRutBsg"/>
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3IzOjoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkwZ2zoZEeCmpu-HRutBsg" name="mustIsolate" visibility="public">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZ3DoZEeCmpu-HRutBsg" annotatedElement="_AkwZ2zoZEeCmpu-HRutBsg">
        <body>If true, then the actions in the node execute in isolation from actions outside the node.</body>
      </ownedComment>
      <type xmi:type="uml:PrimitiveType" href="PrimitiveTypes.xmi#_PSic1ToZEeCmpu-HRutBsg"/>
      <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_AkwZ3ToZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkwZ3joZEeCmpu-HRutBsg" name="node" visibility="public" aggregation="composite" association="_AkwaRToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZ3zoZEeCmpu-HRutBsg" annotatedElement="_AkwZ3joZEeCmpu-HRutBsg">
        <body>Nodes immediately contained in the group.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Activities.fragment.xmi#_BHeuQToZEeCmpu-HRutBsg"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkwZ4DoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwZ4ToZEeCmpu-HRutBsg"/>
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3IzOjoZEeCmpu-HRutBsg"/>
      <subsettedProperty xmi:type="uml:Property" href="Activities.fragment.xmi#_BHeuMzoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkwZ4joZEeCmpu-HRutBsg" name="structuredNodeInput" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwaQToZEeCmpu-HRutBsg">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkwZ4zoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwZ5DoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkwZ5ToZEeCmpu-HRutBsg" name="structuredNodeOutput" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdffzoZEeCmpu-HRutBsg" association="_AkwaPjoZEeCmpu-HRutBsg">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkwZ5joZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwZ5zoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkwZ6DoZEeCmpu-HRutBsg" name="variable" visibility="public" aggregation="composite" association="_AkwaRjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZ6ToZEeCmpu-HRutBsg" annotatedElement="_AkwZ6DoZEeCmpu-HRutBsg">
        <body>A variable defined in the scope of the structured activity node. It has no value and may not be accessed</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Activities.fragment.xmi#_BHevfzoZEeCmpu-HRutBsg"/>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkwZ6joZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwZ6zoZEeCmpu-HRutBsg"/>
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3ShrDoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AkwZ7DoZEeCmpu-HRutBsg" name="TestIdentityAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZ7ToZEeCmpu-HRutBsg" annotatedElement="_AkwZ7DoZEeCmpu-HRutBsg">
      <body>A test identity action is an action that tests if two values are identical objects.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwZ7joZEeCmpu-HRutBsg" name="multiplicity" constrainedElement="_AkwZ7DoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZ7zoZEeCmpu-HRutBsg" annotatedElement="_AkwZ7joZEeCmpu-HRutBsg">
        <body>The multiplicity of the input pins is 1..1.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwZ8DoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>first.is(1,1)&#xA;and second.is(1,1)&#xA;</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwZ8ToZEeCmpu-HRutBsg" name="no_type" constrainedElement="_AkwZ7DoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZ8joZEeCmpu-HRutBsg" annotatedElement="_AkwZ8ToZEeCmpu-HRutBsg">
        <body>The input pins have no type.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwZ8zoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>first.type= null and second.type = null&#xA;</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwZ9DoZEeCmpu-HRutBsg" name="result_is_boolean" constrainedElement="_AkwZ7DoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZ9ToZEeCmpu-HRutBsg" annotatedElement="_AkwZ9DoZEeCmpu-HRutBsg">
        <body>The type of the result is the UML standard primitive type Boolean. (This is not directly representable in OCL at the metamodel level.)</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwZ9joZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true&#xA;</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AkwZ9zoZEeCmpu-HRutBsg" general="_AkdfaDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkwZ-DoZEeCmpu-HRutBsg" name="first" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwaNToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZ-ToZEeCmpu-HRutBsg" annotatedElement="_AkwZ-DoZEeCmpu-HRutBsg">
        <body>Gives the pin on which an object is placed.</body>
      </ownedComment>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkwZ-joZEeCmpu-HRutBsg" name="result" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdffzoZEeCmpu-HRutBsg" association="_AkwaOzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZ-zoZEeCmpu-HRutBsg" annotatedElement="_AkwZ-joZEeCmpu-HRutBsg">
        <body>Tells whether the two input objects are identical.</body>
      </ownedComment>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkwZ_DoZEeCmpu-HRutBsg" name="second" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwaODoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZ_ToZEeCmpu-HRutBsg" annotatedElement="_AkwZ_DoZEeCmpu-HRutBsg">
        <body>Gives the pin on which an object is placed.</body>
      </ownedComment>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AkwZ_joZEeCmpu-HRutBsg" name="UnmarshallAction">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AkwZ_zoZEeCmpu-HRutBsg" annotatedElement="_AkwZ_joZEeCmpu-HRutBsg">
      <body>An unmarshall action is an action that breaks an object of a known type into outputs each of which is equal to a value from a structural feature of the object.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwaADoZEeCmpu-HRutBsg" name="structural_feature" constrainedElement="_AkwZ_joZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwaAToZEeCmpu-HRutBsg" annotatedElement="_AkwaADoZEeCmpu-HRutBsg">
        <body>The unmarshall classifier must have at least one structural feature.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwaAjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwaAzoZEeCmpu-HRutBsg" name="number_of_result" constrainedElement="_AkwZ_joZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwaBDoZEeCmpu-HRutBsg" annotatedElement="_AkwaAzoZEeCmpu-HRutBsg">
        <body>The number of result output pins must be the same as the number of structural features of the unmarshall classifier.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwaBToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwaBjoZEeCmpu-HRutBsg" name="multiplicity_of_result" constrainedElement="_AkwZ_joZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwaBzoZEeCmpu-HRutBsg" annotatedElement="_AkwaBjoZEeCmpu-HRutBsg">
        <body>The multiplicity of each result output pin must be compatible with the multiplicity of the corresponding structural features of the unmarshall classifier.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwaCDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwaCToZEeCmpu-HRutBsg" name="type_and_ordering" constrainedElement="_AkwZ_joZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwaCjoZEeCmpu-HRutBsg" annotatedElement="_AkwaCToZEeCmpu-HRutBsg">
        <body>The type and ordering of each result output pin must be the same as the corresponding structural feature of the unmarshall classifier.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwaCzoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwaDDoZEeCmpu-HRutBsg" name="unmarshallType_is_classifier" constrainedElement="_AkwZ_joZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwaDToZEeCmpu-HRutBsg" annotatedElement="_AkwaDDoZEeCmpu-HRutBsg">
        <body>unmarshallType must be a Classifier with ordered attributes</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwaDjoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwaDzoZEeCmpu-HRutBsg" name="multiplicity_of_object" constrainedElement="_AkwZ_joZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwaEDoZEeCmpu-HRutBsg" annotatedElement="_AkwaDzoZEeCmpu-HRutBsg">
        <body>The multiplicity of the object input pin is 1..1</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwaEToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwaEjoZEeCmpu-HRutBsg" name="same_type" constrainedElement="_AkwZ_joZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwaEzoZEeCmpu-HRutBsg" annotatedElement="_AkwaEjoZEeCmpu-HRutBsg">
        <body>The type of the object input pin must be the same as the unmarshall classifier.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwaFDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AkwaFToZEeCmpu-HRutBsg" general="_AkdfaDoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkwaFjoZEeCmpu-HRutBsg" name="object" visibility="public" type="_AknQnzoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdfcDoZEeCmpu-HRutBsg" association="_AkwaMjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwaFzoZEeCmpu-HRutBsg" annotatedElement="_AkwaFjoZEeCmpu-HRutBsg">
        <body>The object to be unmarshalled.</body>
      </ownedComment>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkwaGDoZEeCmpu-HRutBsg" name="result" visibility="public" type="_AknRRjoZEeCmpu-HRutBsg" aggregation="composite" subsettedProperty="_AkdffzoZEeCmpu-HRutBsg" association="_AkwaKzoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwaGToZEeCmpu-HRutBsg" annotatedElement="_AkwaGDoZEeCmpu-HRutBsg">
        <body>The values of the structural features of the input object.</body>
      </ownedComment>
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkwaGjoZEeCmpu-HRutBsg" value="*"/>
    </ownedAttribute>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkwaGzoZEeCmpu-HRutBsg" name="unmarshallType" visibility="public" association="_AkwaLjoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwaHDoZEeCmpu-HRutBsg" annotatedElement="_AkwaGzoZEeCmpu-HRutBsg">
        <body>The type of the object to be unmarshalled.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Classification.fragment.xmi#_CHsOcDoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Class" xmi:id="_AkwaHToZEeCmpu-HRutBsg" name="ValuePin">
    <ownedComment xmi:type="uml:Comment" xmi:id="_AkwaHjoZEeCmpu-HRutBsg" annotatedElement="_AkwaHToZEeCmpu-HRutBsg">
      <body>A value pin is an input pin that provides a value by evaluating a value specification.</body>
    </ownedComment>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwaHzoZEeCmpu-HRutBsg" name="no_incoming_edges" constrainedElement="_AkwaHToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwaIDoZEeCmpu-HRutBsg" annotatedElement="_AkwaHzoZEeCmpu-HRutBsg">
        <body>Value pins have no incoming edges.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwaIToZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <ownedRule xmi:type="uml:Constraint" xmi:id="_AkwaIjoZEeCmpu-HRutBsg" name="compatible_type" constrainedElement="_AkwaHToZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwaIzoZEeCmpu-HRutBsg" annotatedElement="_AkwaIjoZEeCmpu-HRutBsg">
        <body>The type of value specification must be compatible with the type of the value pin.</body>
      </ownedComment>
      <specification xmi:type="uml:OpaqueExpression" xmi:id="_AkwaJDoZEeCmpu-HRutBsg">
        <language>OCL</language>
        <body>true</body>
      </specification>
    </ownedRule>
    <generalization xmi:type="uml:Generalization" xmi:id="_AkwaJToZEeCmpu-HRutBsg" general="_AknQnzoZEeCmpu-HRutBsg"/>
    <ownedAttribute xmi:type="uml:Property" xmi:id="_AkwaJjoZEeCmpu-HRutBsg" name="value" visibility="public" aggregation="composite" association="_AkwaKDoZEeCmpu-HRutBsg">
      <ownedComment xmi:type="uml:Comment" xmi:id="_AkwaJzoZEeCmpu-HRutBsg" annotatedElement="_AkwaJjoZEeCmpu-HRutBsg">
        <body>Value that the pin will provide.</body>
      </ownedComment>
      <type xmi:type="uml:Class" href="Values.fragment.xmi#_MYTjCToZEeCmpu-HRutBsg"/>
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3IzOjoZEeCmpu-HRutBsg"/>
    </ownedAttribute>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaKDoZEeCmpu-HRutBsg" name="A_value_valuePin" memberEnd="_AkwaJjoZEeCmpu-HRutBsg _AkwaKToZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaKToZEeCmpu-HRutBsg" name="valuePin" visibility="public" type="_AkwaHToZEeCmpu-HRutBsg" association="_AkwaKDoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaKjoZEeCmpu-HRutBsg"/>
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3IzPjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaKzoZEeCmpu-HRutBsg" name="A_result_unmarshallAction" memberEnd="_AkwaGDoZEeCmpu-HRutBsg _AkwaLDoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaLDoZEeCmpu-HRutBsg" name="unmarshallAction" visibility="public" type="_AkwZ_joZEeCmpu-HRutBsg" subsettedProperty="_AkwbSDoZEeCmpu-HRutBsg" association="_AkwaKzoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaLToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaLjoZEeCmpu-HRutBsg" name="A_unmarshallType_unmarshallAction" memberEnd="_AkwaGzoZEeCmpu-HRutBsg _AkwaLzoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaLzoZEeCmpu-HRutBsg" name="unmarshallAction" visibility="public" type="_AkwZ_joZEeCmpu-HRutBsg" association="_AkwaLjoZEeCmpu-HRutBsg">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkwaMDoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaMToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaMjoZEeCmpu-HRutBsg" name="A_object_unmarshallAction" memberEnd="_AkwaFjoZEeCmpu-HRutBsg _AkwaMzoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaMzoZEeCmpu-HRutBsg" name="unmarshallAction" visibility="public" type="_AkwZ_joZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwaMjoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaNDoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaNToZEeCmpu-HRutBsg" name="A_first_testIdentityAction" memberEnd="_AkwZ-DoZEeCmpu-HRutBsg _AkwaNjoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaNjoZEeCmpu-HRutBsg" name="testIdentityAction" visibility="public" type="_AkwZ7DoZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwaNToZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaNzoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaODoZEeCmpu-HRutBsg" name="A_second_testIdentityAction" memberEnd="_AkwZ_DoZEeCmpu-HRutBsg _AkwaOToZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaOToZEeCmpu-HRutBsg" name="testIdentityAction" visibility="public" type="_AkwZ7DoZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwaODoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaOjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaOzoZEeCmpu-HRutBsg" name="A_result_testIdentityAction" memberEnd="_AkwZ-joZEeCmpu-HRutBsg _AkwaPDoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaPDoZEeCmpu-HRutBsg" name="testIdentityAction" visibility="public" type="_AkwZ7DoZEeCmpu-HRutBsg" subsettedProperty="_AkwbSDoZEeCmpu-HRutBsg" association="_AkwaOzoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaPToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaPjoZEeCmpu-HRutBsg" name="A_structuredNodeOutput_structuredActivityNode" memberEnd="_AkwZ5ToZEeCmpu-HRutBsg _AkwaPzoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaPzoZEeCmpu-HRutBsg" name="structuredActivityNode" visibility="public" type="_AkwZxToZEeCmpu-HRutBsg" subsettedProperty="_AkwbSDoZEeCmpu-HRutBsg" association="_AkwaPjoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaQDoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaQToZEeCmpu-HRutBsg" name="A_structuredNodeInput_structuredActivityNode" memberEnd="_AkwZ4joZEeCmpu-HRutBsg _AkwaQjoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaQjoZEeCmpu-HRutBsg" name="structuredActivityNode" visibility="public" type="_AkwZxToZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwaQToZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaQzoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaRDoZEeCmpu-HRutBsg" name="A_edge_inStructuredNode">
    <memberEnd xmi:type="uml:Property" href="#_AkwZ1zoZEeCmpu-HRutBsg"/>
    <memberEnd xmi:type="uml:Property" href="Activities.fragment.xmi#_BHeuEDoZEeCmpu-HRutBsg"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaRToZEeCmpu-HRutBsg" name="A_node_inStructuredNode">
    <memberEnd xmi:type="uml:Property" href="#_AkwZ3joZEeCmpu-HRutBsg"/>
    <memberEnd xmi:type="uml:Property" href="Activities.fragment.xmi#_BHeuWToZEeCmpu-HRutBsg"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaRjoZEeCmpu-HRutBsg" name="A_variable_scope">
    <memberEnd xmi:type="uml:Property" href="#_AkwZ6DoZEeCmpu-HRutBsg"/>
    <memberEnd xmi:type="uml:Property" href="Activities.fragment.xmi#_BHevijoZEeCmpu-HRutBsg"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaRzoZEeCmpu-HRutBsg" name="A_object_structuralFeatureAction" memberEnd="_AkwZwToZEeCmpu-HRutBsg _AkwaSDoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaSDoZEeCmpu-HRutBsg" name="structuralFeatureAction" visibility="public" type="_AkwZrzoZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwaRzoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaSToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaSjoZEeCmpu-HRutBsg" name="A_structuralFeature_structuralFeatureAction" memberEnd="_AkwZwzoZEeCmpu-HRutBsg _AkwaSzoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaSzoZEeCmpu-HRutBsg" name="structuralFeatureAction" visibility="public" type="_AkwZrzoZEeCmpu-HRutBsg" association="_AkwaSjoZEeCmpu-HRutBsg">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkwaTDoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaTToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaTjoZEeCmpu-HRutBsg" name="A_object_startObjectBehaviorAction" memberEnd="_AkwZrToZEeCmpu-HRutBsg _AkwaTzoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaTzoZEeCmpu-HRutBsg" name="startObjectBehaviorAction" visibility="public" type="_AkwZmzoZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwaTjoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaUDoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaUToZEeCmpu-HRutBsg" name="A_object_startClassifierBehaviorAction" memberEnd="_AkwZmToZEeCmpu-HRutBsg _AkwaUjoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaUjoZEeCmpu-HRutBsg" name="startClassifierBehaviorAction" visibility="public" type="_AkwZkDoZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwaUToZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaUzoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaVDoZEeCmpu-HRutBsg" name="A_executableNode_sequenceNode" memberEnd="_AknSeToZEeCmpu-HRutBsg _AkwaVToZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaVToZEeCmpu-HRutBsg" name="sequenceNode" visibility="public" type="_AknSdjoZEeCmpu-HRutBsg" association="_AkwaVDoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaVjoZEeCmpu-HRutBsg"/>
      <subsettedProperty xmi:type="uml:Property" href="Activities.fragment.xmi#_BHeuWToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaVzoZEeCmpu-HRutBsg" name="A_signal_sendSignalAction" memberEnd="_AknScjoZEeCmpu-HRutBsg _AkwaWDoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaWDoZEeCmpu-HRutBsg" name="sendSignalAction" visibility="public" type="_AknSaToZEeCmpu-HRutBsg" association="_AkwaVzoZEeCmpu-HRutBsg">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkwaWToZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaWjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaWzoZEeCmpu-HRutBsg" name="A_target_sendSignalAction" memberEnd="_AknSdDoZEeCmpu-HRutBsg _AkwaXDoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaXDoZEeCmpu-HRutBsg" name="sendSignalAction" visibility="public" type="_AknSaToZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwaWzoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaXToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaXjoZEeCmpu-HRutBsg" name="A_request_sendObjectAction" memberEnd="_AknSZToZEeCmpu-HRutBsg _AkwaYDoZEeCmpu-HRutBsg">
    <generalization xmi:type="uml:Generalization" xmi:id="_AkwaXzoZEeCmpu-HRutBsg" general="_Akwa9DoZEeCmpu-HRutBsg"/>
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaYDoZEeCmpu-HRutBsg" name="sendObjectAction" visibility="public" type="_AknSYjoZEeCmpu-HRutBsg" redefinedProperty="_Akwa9ToZEeCmpu-HRutBsg" association="_AkwaXjoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaYToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaYjoZEeCmpu-HRutBsg" name="A_target_sendObjectAction" memberEnd="_AknSZzoZEeCmpu-HRutBsg _AkwaYzoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaYzoZEeCmpu-HRutBsg" name="sendObjectAction" visibility="public" type="_AknSYjoZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwaYjoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaZDoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaZToZEeCmpu-HRutBsg" name="A_returnInformation_replyAction" memberEnd="_AknSYDoZEeCmpu-HRutBsg _AkwaZjoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaZjoZEeCmpu-HRutBsg" name="replyAction" visibility="public" type="_AknSUToZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwaZToZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaZzoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaaDoZEeCmpu-HRutBsg" name="A_replyToCall_replyAction" memberEnd="_AknSWjoZEeCmpu-HRutBsg _AkwaaToZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaaToZEeCmpu-HRutBsg" name="replyAction" visibility="public" type="_AknSUToZEeCmpu-HRutBsg" association="_AkwaaDoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaajoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaazoZEeCmpu-HRutBsg" name="A_replyValue_replyAction" memberEnd="_AknSXDoZEeCmpu-HRutBsg _AkwabDoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwabDoZEeCmpu-HRutBsg" name="replyAction" visibility="public" type="_AknSUToZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwaazoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwabToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwabjoZEeCmpu-HRutBsg" name="A_removeAt_removeVariableValueAction" memberEnd="_AknSTjoZEeCmpu-HRutBsg _AkwabzoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwabzoZEeCmpu-HRutBsg" name="removeVariableValueAction" visibility="public" type="_AknSRToZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwabjoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwacDoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwacToZEeCmpu-HRutBsg" name="A_removeAt_removeStructuralFeatureValueAction" memberEnd="_AknSQjoZEeCmpu-HRutBsg _AkwacjoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwacjoZEeCmpu-HRutBsg" name="removeStructuralFeatureValueAction" visibility="public" type="_AknSOToZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwacToZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaczoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwadDoZEeCmpu-HRutBsg" name="A_collection_reduceAction" memberEnd="_AknSMDoZEeCmpu-HRutBsg _AkwadToZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwadToZEeCmpu-HRutBsg" name="reduceAction" visibility="public" type="_AknSJDoZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwadDoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwadjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwadzoZEeCmpu-HRutBsg" name="A_reducer_reduceAction" memberEnd="_AknSNToZEeCmpu-HRutBsg _AkwaeDoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaeDoZEeCmpu-HRutBsg" name="reduceAction" visibility="public" type="_AknSJDoZEeCmpu-HRutBsg" association="_AkwadzoZEeCmpu-HRutBsg">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkwaeToZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaejoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaezoZEeCmpu-HRutBsg" name="A_result_reduceAction" memberEnd="_AknSNzoZEeCmpu-HRutBsg _AkwafDoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwafDoZEeCmpu-HRutBsg" name="reduceAction" visibility="public" type="_AknSJDoZEeCmpu-HRutBsg" subsettedProperty="_AkwbSDoZEeCmpu-HRutBsg" association="_AkwaezoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwafToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwafjoZEeCmpu-HRutBsg" name="A_object_reclassifyObjectAction" memberEnd="_AknSHjoZEeCmpu-HRutBsg _AkwafzoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwafzoZEeCmpu-HRutBsg" name="reclassifyObjectAction" visibility="public" type="_AknSCzoZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwafjoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwagDoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwagToZEeCmpu-HRutBsg" name="A_newClassifier_reclassifyObjectAction" memberEnd="_AknSGjoZEeCmpu-HRutBsg _AkwagjoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwagjoZEeCmpu-HRutBsg" name="reclassifyObjectAction" visibility="public" type="_AknSCzoZEeCmpu-HRutBsg" association="_AkwagToZEeCmpu-HRutBsg">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkwagzoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwahDoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwahToZEeCmpu-HRutBsg" name="A_oldClassifier_reclassifyObjectAction" memberEnd="_AknSIDoZEeCmpu-HRutBsg _AkwahjoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwahjoZEeCmpu-HRutBsg" name="reclassifyObjectAction" visibility="public" type="_AknSCzoZEeCmpu-HRutBsg" association="_AkwahToZEeCmpu-HRutBsg">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkwahzoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaiDoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaiToZEeCmpu-HRutBsg" name="A_result_readVariableAction" memberEnd="_AknSCToZEeCmpu-HRutBsg _AkwaijoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaijoZEeCmpu-HRutBsg" name="readVariableAction" visibility="public" type="_AknSADoZEeCmpu-HRutBsg" subsettedProperty="_AkwbSDoZEeCmpu-HRutBsg" association="_AkwaiToZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaizoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwajDoZEeCmpu-HRutBsg" name="A_result_readStructuralFeatureAction" memberEnd="_AknR_joZEeCmpu-HRutBsg _AkwajToZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwajToZEeCmpu-HRutBsg" name="readStructuralFeatureAction" visibility="public" type="_AknR9ToZEeCmpu-HRutBsg" subsettedProperty="_AkwbSDoZEeCmpu-HRutBsg" association="_AkwajDoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwajjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwajzoZEeCmpu-HRutBsg" name="A_result_readSelfAction" memberEnd="_AknR8zoZEeCmpu-HRutBsg _AkwakDoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwakDoZEeCmpu-HRutBsg" name="readSelfAction" visibility="public" type="_AknR5DoZEeCmpu-HRutBsg" subsettedProperty="_AkwbSDoZEeCmpu-HRutBsg" association="_AkwajzoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwakToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwakjoZEeCmpu-HRutBsg" name="A_qualifier_readLinkObjectEndQualifierAction" memberEnd="_AknR4DoZEeCmpu-HRutBsg _AkwakzoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwakzoZEeCmpu-HRutBsg" name="readLinkObjectEndQualifierAction" visibility="public" type="_AknRwzoZEeCmpu-HRutBsg" association="_AkwakjoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwalDoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwalToZEeCmpu-HRutBsg" name="A_object_readLinkObjectEndQualifierAction" memberEnd="_AknR3joZEeCmpu-HRutBsg _AkwaljoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaljoZEeCmpu-HRutBsg" name="readLinkObjectEndQualifierAction" visibility="public" type="_AknRwzoZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwalToZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwalzoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwamDoZEeCmpu-HRutBsg" name="A_result_readLinkObjectEndQualifierAction" memberEnd="_AknR4joZEeCmpu-HRutBsg _AkwamToZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwamToZEeCmpu-HRutBsg" name="readLinkObjectEndQualifierAction" visibility="public" type="_AknRwzoZEeCmpu-HRutBsg" subsettedProperty="_AkwbSDoZEeCmpu-HRutBsg" association="_AkwamDoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwamjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwamzoZEeCmpu-HRutBsg" name="A_object_readLinkObjectEndAction" memberEnd="_AknRvzoZEeCmpu-HRutBsg _AkwanDoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwanDoZEeCmpu-HRutBsg" name="readLinkObjectEndAction" visibility="public" type="_AknRpToZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwamzoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwanToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwanjoZEeCmpu-HRutBsg" name="A_end_readLinkObjectEndAction" memberEnd="_AknRvToZEeCmpu-HRutBsg _AkwanzoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwanzoZEeCmpu-HRutBsg" name="readLinkObjectEndAction" visibility="public" type="_AknRpToZEeCmpu-HRutBsg" association="_AkwanjoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaoDoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaoToZEeCmpu-HRutBsg" name="A_result_readLinkObjectEndAction" memberEnd="_AknRwToZEeCmpu-HRutBsg _AkwaojoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaojoZEeCmpu-HRutBsg" name="readLinkObjectEndAction" visibility="public" type="_AknRpToZEeCmpu-HRutBsg" subsettedProperty="_AkwbSDoZEeCmpu-HRutBsg" association="_AkwaoToZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaozoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwapDoZEeCmpu-HRutBsg" name="A_result_readLinkAction" memberEnd="_AknRozoZEeCmpu-HRutBsg _AkwapToZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwapToZEeCmpu-HRutBsg" name="readLinkAction" visibility="public" type="_AknRkToZEeCmpu-HRutBsg" subsettedProperty="_AkwbSDoZEeCmpu-HRutBsg" association="_AkwapDoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwapjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwapzoZEeCmpu-HRutBsg" name="A_classifier_readIsClassifiedObjectAction" memberEnd="_AknRiDoZEeCmpu-HRutBsg _AkwaqDoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaqDoZEeCmpu-HRutBsg" name="readIsClassifiedObjectAction" visibility="public" type="_AknReToZEeCmpu-HRutBsg" association="_AkwapzoZEeCmpu-HRutBsg">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkwaqToZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaqjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaqzoZEeCmpu-HRutBsg" name="A_result_readIsClassifiedObjectAction" memberEnd="_AknRjzoZEeCmpu-HRutBsg _AkwarDoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwarDoZEeCmpu-HRutBsg" name="readIsClassifiedObjectAction" visibility="public" type="_AknReToZEeCmpu-HRutBsg" subsettedProperty="_AkwbSDoZEeCmpu-HRutBsg" association="_AkwaqzoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwarToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwarjoZEeCmpu-HRutBsg" name="A_object_readIsClassifiedObjectAction" memberEnd="_AknRjToZEeCmpu-HRutBsg _AkwarzoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwarzoZEeCmpu-HRutBsg" name="readIsClassifiedObjectAction" visibility="public" type="_AknReToZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwarjoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwasDoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwasToZEeCmpu-HRutBsg" name="A_result_readExtentAction" memberEnd="_AknRdzoZEeCmpu-HRutBsg _AkwasjoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwasjoZEeCmpu-HRutBsg" name="readExtentAction" visibility="public" type="_AknRbDoZEeCmpu-HRutBsg" subsettedProperty="_AkwbSDoZEeCmpu-HRutBsg" association="_AkwasToZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaszoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwatDoZEeCmpu-HRutBsg" name="A_classifier_readExtentAction" memberEnd="_AknRdToZEeCmpu-HRutBsg _AkwatToZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwatToZEeCmpu-HRutBsg" name="readExtentAction" visibility="public" type="_AknRbDoZEeCmpu-HRutBsg" association="_AkwatDoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwatjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwatzoZEeCmpu-HRutBsg" name="A_exception_raiseExceptionAction" memberEnd="_AknRajoZEeCmpu-HRutBsg _AkwauDoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwauDoZEeCmpu-HRutBsg" name="raiseExceptionAction" visibility="public" type="_AknRZzoZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwatzoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwauToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaujoZEeCmpu-HRutBsg" name="A_qualifier_qualifierValue" memberEnd="_AknRYzoZEeCmpu-HRutBsg _AkwauzoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwauzoZEeCmpu-HRutBsg" name="qualifierValue" visibility="public" type="_AknRVzoZEeCmpu-HRutBsg" association="_AkwaujoZEeCmpu-HRutBsg">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkwavDoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwavToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwavjoZEeCmpu-HRutBsg" name="A_value_qualifierValue" memberEnd="_AknRZToZEeCmpu-HRutBsg _AkwavzoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwavzoZEeCmpu-HRutBsg" name="qualifierValue" visibility="public" type="_AknRVzoZEeCmpu-HRutBsg" association="_AkwavjoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwawDoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwawToZEeCmpu-HRutBsg" name="A_outputValue_opaqueAction" memberEnd="_AknRQjoZEeCmpu-HRutBsg _AkwawjoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwawjoZEeCmpu-HRutBsg" name="opaqueAction" visibility="public" type="_AknRMzoZEeCmpu-HRutBsg" subsettedProperty="_AkwbSDoZEeCmpu-HRutBsg" association="_AkwawToZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwawzoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaxDoZEeCmpu-HRutBsg" name="A_inputValue_opaqueAction" memberEnd="_AknROjoZEeCmpu-HRutBsg _AkwaxToZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwaxToZEeCmpu-HRutBsg" name="opaqueAction" visibility="public" type="_AknRMzoZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwaxDoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwaxjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwaxzoZEeCmpu-HRutBsg" name="A_setupPart_loopNode" memberEnd="_AknRLDoZEeCmpu-HRutBsg _AkwayDoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwayDoZEeCmpu-HRutBsg" name="loopNode" visibility="public" type="_AknRBDoZEeCmpu-HRutBsg" association="_AkwaxzoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwayToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwayjoZEeCmpu-HRutBsg" name="A_bodyPart_loopNode" memberEnd="_AknRFzoZEeCmpu-HRutBsg _AkwayzoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwayzoZEeCmpu-HRutBsg" name="loopNode" visibility="public" type="_AknRBDoZEeCmpu-HRutBsg" association="_AkwayjoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwazDoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwazToZEeCmpu-HRutBsg" name="A_loopVariable_loopNode" memberEnd="_AknRIDoZEeCmpu-HRutBsg _AkwazjoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwazjoZEeCmpu-HRutBsg" name="loopNode" visibility="public" type="_AknRBDoZEeCmpu-HRutBsg" association="_AkwazToZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwazzoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_Akwa0DoZEeCmpu-HRutBsg" name="A_result_loopNode" memberEnd="_AknRKDoZEeCmpu-HRutBsg _Akwa0ToZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_Akwa0ToZEeCmpu-HRutBsg" name="loopNode" visibility="public" type="_AknRBDoZEeCmpu-HRutBsg" subsettedProperty="_AkwaPzoZEeCmpu-HRutBsg" association="_Akwa0DoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Akwa0joZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_Akwa0zoZEeCmpu-HRutBsg" name="A_bodyOutput_loopNode" memberEnd="_AknREzoZEeCmpu-HRutBsg _Akwa1DoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_Akwa1DoZEeCmpu-HRutBsg" name="loopNode" visibility="public" type="_AknRBDoZEeCmpu-HRutBsg" association="_Akwa0zoZEeCmpu-HRutBsg">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Akwa1ToZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Akwa1joZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_Akwa1zoZEeCmpu-HRutBsg" name="A_loopVariableInput_loopNode" memberEnd="_AknRJDoZEeCmpu-HRutBsg _Akwa2DoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_Akwa2DoZEeCmpu-HRutBsg" name="loopNode" visibility="public" type="_AknRBDoZEeCmpu-HRutBsg" subsettedProperty="_AkwaQjoZEeCmpu-HRutBsg" association="_Akwa1zoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Akwa2ToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_Akwa2joZEeCmpu-HRutBsg" name="A_test_loopNode" memberEnd="_AknRMDoZEeCmpu-HRutBsg _Akwa2zoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_Akwa2zoZEeCmpu-HRutBsg" name="loopNode" visibility="public" type="_AknRBDoZEeCmpu-HRutBsg" association="_Akwa2joZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Akwa3DoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_Akwa3ToZEeCmpu-HRutBsg" name="A_decider_loopNode" memberEnd="_AknRGzoZEeCmpu-HRutBsg _Akwa3joZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_Akwa3joZEeCmpu-HRutBsg" name="loopNode" visibility="public" type="_AknRBDoZEeCmpu-HRutBsg" association="_Akwa3ToZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Akwa3zoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_Akwa4DoZEeCmpu-HRutBsg" name="A_destroyAt_linkEndDestructionData" memberEnd="_AknQ_joZEeCmpu-HRutBsg _Akwa4ToZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_Akwa4ToZEeCmpu-HRutBsg" name="linkEndDestructionData" visibility="public" type="_AknQ9ToZEeCmpu-HRutBsg" association="_Akwa4DoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Akwa4joZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_Akwa4zoZEeCmpu-HRutBsg" name="A_value_linkEndData" memberEnd="_AknQ8joZEeCmpu-HRutBsg _Akwa5DoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_Akwa5DoZEeCmpu-HRutBsg" name="linkEndData" visibility="public" type="_AknQ2joZEeCmpu-HRutBsg" association="_Akwa4zoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Akwa5ToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_Akwa5joZEeCmpu-HRutBsg" name="A_end_linkEndData" memberEnd="_AknQ7DoZEeCmpu-HRutBsg _Akwa5zoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_Akwa5zoZEeCmpu-HRutBsg" name="linkEndData" visibility="public" type="_AknQ2joZEeCmpu-HRutBsg" association="_Akwa5joZEeCmpu-HRutBsg">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Akwa6DoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Akwa6ToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_Akwa6joZEeCmpu-HRutBsg" name="A_qualifier_linkEndData" memberEnd="_AknQ7joZEeCmpu-HRutBsg _Akwa6zoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_Akwa6zoZEeCmpu-HRutBsg" name="linkEndData" visibility="public" type="_AknQ2joZEeCmpu-HRutBsg" association="_Akwa6joZEeCmpu-HRutBsg">
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3IzPjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_Akwa7DoZEeCmpu-HRutBsg" name="A_insertAt_linkEndCreationData" memberEnd="_AknQ1DoZEeCmpu-HRutBsg _Akwa7ToZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_Akwa7ToZEeCmpu-HRutBsg" name="linkEndCreationData" visibility="public" type="_AknQyzoZEeCmpu-HRutBsg" association="_Akwa7DoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Akwa7joZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_Akwa7zoZEeCmpu-HRutBsg" name="A_inputValue_linkAction" memberEnd="_AknQwzoZEeCmpu-HRutBsg _Akwa8DoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_Akwa8DoZEeCmpu-HRutBsg" name="linkAction" visibility="public" type="_AknQszoZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_Akwa7zoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Akwa8ToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_Akwa8joZEeCmpu-HRutBsg" name="A_endData_linkAction" memberEnd="_AknQvzoZEeCmpu-HRutBsg _Akwa8zoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_Akwa8zoZEeCmpu-HRutBsg" name="linkAction" visibility="public" type="_AknQszoZEeCmpu-HRutBsg" association="_Akwa8joZEeCmpu-HRutBsg">
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3IzPjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_Akwa9DoZEeCmpu-HRutBsg" name="A_argument_invocationAction" memberEnd="_AknQrDoZEeCmpu-HRutBsg _Akwa9ToZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_Akwa9ToZEeCmpu-HRutBsg" name="invocationAction" visibility="public" type="_AknQpToZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_Akwa9DoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Akwa9joZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_Akwa9zoZEeCmpu-HRutBsg" name="A_onPort_invocationAction" memberEnd="_AknQsDoZEeCmpu-HRutBsg _Akwa-DoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_Akwa-DoZEeCmpu-HRutBsg" name="invocationAction" visibility="public" type="_AknQpToZEeCmpu-HRutBsg" association="_Akwa9zoZEeCmpu-HRutBsg">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Akwa-ToZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Akwa-joZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_Akwa-zoZEeCmpu-HRutBsg" name="A_inputElement_regionAsInput" memberEnd="_AknQlToZEeCmpu-HRutBsg _AknQiToZEeCmpu-HRutBsg"/>
  <packagedElement xmi:type="uml:Association" xmi:id="_Akwa_DoZEeCmpu-HRutBsg" name="A_outputElement_regionAsOutput" memberEnd="_AknQmzoZEeCmpu-HRutBsg _AknQjDoZEeCmpu-HRutBsg"/>
  <packagedElement xmi:type="uml:Association" xmi:id="_Akwa_ToZEeCmpu-HRutBsg" name="A_target_destroyObjectAction" memberEnd="_AknQgToZEeCmpu-HRutBsg _Akwa_joZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_Akwa_joZEeCmpu-HRutBsg" name="destroyObjectAction" visibility="public" type="_AknQcjoZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_Akwa_ToZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Akwa_zoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbADoZEeCmpu-HRutBsg" name="A_endData_destroyLinkAction" memberEnd="_AknQbjoZEeCmpu-HRutBsg _AkwbAjoZEeCmpu-HRutBsg">
    <generalization xmi:type="uml:Generalization" xmi:id="_AkwbAToZEeCmpu-HRutBsg" general="_Akwa8joZEeCmpu-HRutBsg"/>
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbAjoZEeCmpu-HRutBsg" name="destroyLinkAction" visibility="public" type="_AknQazoZEeCmpu-HRutBsg" redefinedProperty="_Akwa8zoZEeCmpu-HRutBsg" association="_AkwbADoZEeCmpu-HRutBsg"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbAzoZEeCmpu-HRutBsg" name="A_classifier_createObjectAction" memberEnd="_AknQZzoZEeCmpu-HRutBsg _AkwbBDoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbBDoZEeCmpu-HRutBsg" name="createObjectAction" visibility="public" type="_AknQWDoZEeCmpu-HRutBsg" association="_AkwbAzoZEeCmpu-HRutBsg">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkwbBToZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbBjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbBzoZEeCmpu-HRutBsg" name="A_result_createObjectAction" memberEnd="_AknQaToZEeCmpu-HRutBsg _AkwbCDoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbCDoZEeCmpu-HRutBsg" name="createObjectAction" visibility="public" type="_AknQWDoZEeCmpu-HRutBsg" subsettedProperty="_AkwbSDoZEeCmpu-HRutBsg" association="_AkwbBzoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbCToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbCjoZEeCmpu-HRutBsg" name="A_result_createLinkObjectAction" memberEnd="_AknQVjoZEeCmpu-HRutBsg _AkwbCzoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbCzoZEeCmpu-HRutBsg" name="createLinkObjectAction" visibility="public" type="_AknQSjoZEeCmpu-HRutBsg" subsettedProperty="_AkwbSDoZEeCmpu-HRutBsg" association="_AkwbCjoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbDDoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbDToZEeCmpu-HRutBsg" name="A_endData_createLinkAction" memberEnd="_AknQRjoZEeCmpu-HRutBsg _AkwbDzoZEeCmpu-HRutBsg">
    <generalization xmi:type="uml:Generalization" xmi:id="_AkwbDjoZEeCmpu-HRutBsg" general="_Akwa8joZEeCmpu-HRutBsg"/>
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbDzoZEeCmpu-HRutBsg" name="createLinkAction" visibility="public" type="_AknQQDoZEeCmpu-HRutBsg" redefinedProperty="_Akwa8zoZEeCmpu-HRutBsg" association="_AkwbDToZEeCmpu-HRutBsg"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbEDoZEeCmpu-HRutBsg" name="A_clause_conditionalNode" memberEnd="_AknQMzoZEeCmpu-HRutBsg _AkwbEToZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbEToZEeCmpu-HRutBsg" name="conditionalNode" visibility="public" type="_AknQHjoZEeCmpu-HRutBsg" association="_AkwbEDoZEeCmpu-HRutBsg">
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3IzPjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbEjoZEeCmpu-HRutBsg" name="A_result_conditionalNode" memberEnd="_AknQPDoZEeCmpu-HRutBsg _AkwbEzoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbEzoZEeCmpu-HRutBsg" name="conditionalNode" visibility="public" type="_AknQHjoZEeCmpu-HRutBsg" subsettedProperty="_AkwaPzoZEeCmpu-HRutBsg" association="_AkwbEjoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbFDoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbFToZEeCmpu-HRutBsg" name="A_result_clearStructuralFeatureAction" memberEnd="_AknQGDoZEeCmpu-HRutBsg _AkwbFjoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbFjoZEeCmpu-HRutBsg" name="clearStructuralFeatureAction" visibility="public" type="_AknQDzoZEeCmpu-HRutBsg" subsettedProperty="_AkwbSDoZEeCmpu-HRutBsg" association="_AkwbFToZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbFzoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbGDoZEeCmpu-HRutBsg" name="A_object_clearAssociationAction" memberEnd="_AknQDToZEeCmpu-HRutBsg _AkwbGToZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbGToZEeCmpu-HRutBsg" name="clearAssociationAction" visibility="public" type="_AknQAjoZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwbGDoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbGjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbGzoZEeCmpu-HRutBsg" name="A_association_clearAssociationAction" memberEnd="_AknQCzoZEeCmpu-HRutBsg _AkwbHDoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbHDoZEeCmpu-HRutBsg" name="clearAssociationAction" visibility="public" type="_AknQAjoZEeCmpu-HRutBsg" association="_AkwbGzoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbHToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbHjoZEeCmpu-HRutBsg" name="A_decider_clause" memberEnd="_AknP9ToZEeCmpu-HRutBsg _AkwbHzoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbHzoZEeCmpu-HRutBsg" name="clause" visibility="public" type="_AknP4ToZEeCmpu-HRutBsg" association="_AkwbHjoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbIDoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbIToZEeCmpu-HRutBsg" name="A_bodyOutput_clause" memberEnd="_AknP8ToZEeCmpu-HRutBsg _AkwbIjoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbIjoZEeCmpu-HRutBsg" name="clause" visibility="public" type="_AknP4ToZEeCmpu-HRutBsg" association="_AkwbIToZEeCmpu-HRutBsg">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkwbIzoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbJDoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbJToZEeCmpu-HRutBsg" name="A_test_clause" memberEnd="_AknP_zoZEeCmpu-HRutBsg _AkwbJjoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbJjoZEeCmpu-HRutBsg" name="clause" visibility="public" type="_AknP4ToZEeCmpu-HRutBsg" association="_AkwbJToZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbJzoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbKDoZEeCmpu-HRutBsg" name="A_body_clause" memberEnd="_AknP7ToZEeCmpu-HRutBsg _AkwbKToZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbKToZEeCmpu-HRutBsg" name="clause" visibility="public" type="_AknP4ToZEeCmpu-HRutBsg" association="_AkwbKDoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbKjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbKzoZEeCmpu-HRutBsg" name="A_predecessorClause_successorClause" memberEnd="_AknP9zoZEeCmpu-HRutBsg _AknP-zoZEeCmpu-HRutBsg"/>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbLDoZEeCmpu-HRutBsg" name="A_target_callOperationAction" memberEnd="_AknP3zoZEeCmpu-HRutBsg _AkwbLToZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbLToZEeCmpu-HRutBsg" name="callOperationAction" visibility="public" type="_AknPzjoZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwbLDoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbLjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbLzoZEeCmpu-HRutBsg" name="A_operation_callOperationAction" memberEnd="_AknP3ToZEeCmpu-HRutBsg _AkwbMDoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbMDoZEeCmpu-HRutBsg" name="callOperationAction" visibility="public" type="_AknPzjoZEeCmpu-HRutBsg" association="_AkwbLzoZEeCmpu-HRutBsg">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkwbMToZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbMjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbMzoZEeCmpu-HRutBsg" name="A_behavior_callBehaviorAction" memberEnd="_AknPzDoZEeCmpu-HRutBsg _AkwbNDoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbNDoZEeCmpu-HRutBsg" name="callBehaviorAction" visibility="public" type="_AknPwDoZEeCmpu-HRutBsg" association="_AkwbMzoZEeCmpu-HRutBsg">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkwbNToZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbNjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbNzoZEeCmpu-HRutBsg" name="A_result_callAction" memberEnd="_AknPvDoZEeCmpu-HRutBsg _AkwbODoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbODoZEeCmpu-HRutBsg" name="callAction" visibility="public" type="_AknPrToZEeCmpu-HRutBsg" subsettedProperty="_AkwbSDoZEeCmpu-HRutBsg" association="_AkwbNzoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbOToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbOjoZEeCmpu-HRutBsg" name="A_signal_broadcastSignalAction" memberEnd="_AknPqzoZEeCmpu-HRutBsg _AkwbOzoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbOzoZEeCmpu-HRutBsg" name="broadcastSignalAction" visibility="public" type="_AknPojoZEeCmpu-HRutBsg" association="_AkwbOjoZEeCmpu-HRutBsg">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkwbPDoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbPToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbPjoZEeCmpu-HRutBsg" name="A_insertAt_addVariableValueAction" memberEnd="_AkdfrzoZEeCmpu-HRutBsg _AkwbPzoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbPzoZEeCmpu-HRutBsg" name="addVariableValueAction" visibility="public" type="_AkdfpjoZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwbPjoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbQDoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbQToZEeCmpu-HRutBsg" name="A_insertAt_addStructuralFeatureValueAction" memberEnd="_AkdfoDoZEeCmpu-HRutBsg _AkwbQjoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbQjoZEeCmpu-HRutBsg" name="addStructuralFeatureValueAction" visibility="public" type="_AkdflzoZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwbQToZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbQzoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbRDoZEeCmpu-HRutBsg" name="A_fromAction_actionInputPin" memberEnd="_AkdflToZEeCmpu-HRutBsg _AkwbRToZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbRToZEeCmpu-HRutBsg" name="actionInputPin" visibility="public" type="_AkdfiToZEeCmpu-HRutBsg" association="_AkwbRDoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbRjoZEeCmpu-HRutBsg"/>
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3IzPjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbRzoZEeCmpu-HRutBsg" name="A_output_action" memberEnd="_AkdffzoZEeCmpu-HRutBsg _AkwbSDoZEeCmpu-HRutBsg" isDerived="true">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbSDoZEeCmpu-HRutBsg" name="action" visibility="public" type="_AkdfaDoZEeCmpu-HRutBsg" association="_AkwbRzoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbSToZEeCmpu-HRutBsg"/>
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3IzPjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbSjoZEeCmpu-HRutBsg" name="A_context_action" memberEnd="_AkdfbToZEeCmpu-HRutBsg _AkwbSzoZEeCmpu-HRutBsg" isDerived="true">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbSzoZEeCmpu-HRutBsg" name="action" visibility="public" type="_AkdfaDoZEeCmpu-HRutBsg" association="_AkwbSjoZEeCmpu-HRutBsg">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkwbTDoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbTToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbTjoZEeCmpu-HRutBsg" name="A_input_action" memberEnd="_AkdfcDoZEeCmpu-HRutBsg _AkwbTzoZEeCmpu-HRutBsg" isDerived="true">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbTzoZEeCmpu-HRutBsg" name="action" visibility="public" type="_AkdfaDoZEeCmpu-HRutBsg" association="_AkwbTjoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbUDoZEeCmpu-HRutBsg"/>
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3IzPjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbUToZEeCmpu-HRutBsg" name="A_localPrecondition_action" memberEnd="_AkdfezoZEeCmpu-HRutBsg _AkwbUjoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbUjoZEeCmpu-HRutBsg" name="action" visibility="public" type="_AkdfaDoZEeCmpu-HRutBsg" association="_AkwbUToZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbUzoZEeCmpu-HRutBsg"/>
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3IzPjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbVDoZEeCmpu-HRutBsg" name="A_localPostcondition_action" memberEnd="_AkdfdzoZEeCmpu-HRutBsg _AkwbVToZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbVToZEeCmpu-HRutBsg" name="action" visibility="public" type="_AkdfaDoZEeCmpu-HRutBsg" association="_AkwbVDoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbVjoZEeCmpu-HRutBsg"/>
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3IzPjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbVzoZEeCmpu-HRutBsg" name="A_trigger_acceptEventAction" memberEnd="_AkdfZToZEeCmpu-HRutBsg _AkwbWDoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbWDoZEeCmpu-HRutBsg" name="acceptEventAction" visibility="public" type="_AkdfTzoZEeCmpu-HRutBsg" association="_AkwbVzoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbWToZEeCmpu-HRutBsg"/>
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3IzPjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbWjoZEeCmpu-HRutBsg" name="A_result_acceptEventAction" memberEnd="_AkdfYToZEeCmpu-HRutBsg _AkwbWzoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbWzoZEeCmpu-HRutBsg" name="acceptEventAction" visibility="public" type="_AkdfTzoZEeCmpu-HRutBsg" subsettedProperty="_AkwbSDoZEeCmpu-HRutBsg" association="_AkwbWjoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbXDoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbXToZEeCmpu-HRutBsg" name="A_returnInformation_acceptCallAction" memberEnd="_AkdfTToZEeCmpu-HRutBsg _AkwbXjoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbXjoZEeCmpu-HRutBsg" name="acceptCallAction" visibility="public" type="_AkdfQToZEeCmpu-HRutBsg" subsettedProperty="_AkwbSDoZEeCmpu-HRutBsg" association="_AkwbXToZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbXzoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbYDoZEeCmpu-HRutBsg" name="A_value_writeVariableAction" memberEnd="_AkdfNjoZEeCmpu-HRutBsg _AkwbYToZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbYToZEeCmpu-HRutBsg" name="writeVariableAction" visibility="public" type="_AkdfLToZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwbYDoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbYjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbYzoZEeCmpu-HRutBsg" name="A_result_writeStructuralFeatureAction" memberEnd="_AkdfJzoZEeCmpu-HRutBsg _AkwbZDoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbZDoZEeCmpu-HRutBsg" name="writeStructuralFeatureAction" visibility="public" type="_AkdfGDoZEeCmpu-HRutBsg" subsettedProperty="_AkwbSDoZEeCmpu-HRutBsg" association="_AkwbYzoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbZToZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbZjoZEeCmpu-HRutBsg" name="A_value_writeStructuralFeatureAction" memberEnd="_AkdfKjoZEeCmpu-HRutBsg _AkwbZzoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbZzoZEeCmpu-HRutBsg" name="writeStructuralFeatureAction" visibility="public" type="_AkdfGDoZEeCmpu-HRutBsg" subsettedProperty="_AkwbTzoZEeCmpu-HRutBsg" association="_AkwbZjoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbaDoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbaToZEeCmpu-HRutBsg" name="A_variable_variableAction" memberEnd="_AkdfEDoZEeCmpu-HRutBsg _AkwbajoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbajoZEeCmpu-HRutBsg" name="variableAction" visibility="public" type="_AkdfCjoZEeCmpu-HRutBsg" association="_AkwbaToZEeCmpu-HRutBsg">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_AkwbazoZEeCmpu-HRutBsg" value="*"/>
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbbDoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbbToZEeCmpu-HRutBsg" name="A_result_valueSpecificationAction" memberEnd="_AkdfBjoZEeCmpu-HRutBsg _AkwbbjoZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbbjoZEeCmpu-HRutBsg" name="valueSpecificationAction" visibility="public" type="_Akde_ToZEeCmpu-HRutBsg" subsettedProperty="_AkwbSDoZEeCmpu-HRutBsg" association="_AkwbbToZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbbzoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_AkwbcDoZEeCmpu-HRutBsg" name="A_value_valueSpecificationAction" memberEnd="_AkdfCDoZEeCmpu-HRutBsg _AkwbcToZEeCmpu-HRutBsg">
    <ownedEnd xmi:type="uml:Property" xmi:id="_AkwbcToZEeCmpu-HRutBsg" name="valueSpecificationAction" visibility="public" type="_Akde_ToZEeCmpu-HRutBsg" association="_AkwbcDoZEeCmpu-HRutBsg">
      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_AkwbcjoZEeCmpu-HRutBsg"/>
      <subsettedProperty xmi:type="uml:Property" href="CommonStructure.fragment.xmi#_D3IzPjoZEeCmpu-HRutBsg"/>
    </ownedEnd>
  </packagedElement>
</uml:Package>
